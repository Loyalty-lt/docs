{
    "openapi": "3.0.0",
    "info": {
        "title": "Loyalty Platform API",
        "description": "API for managing the loyalty platform",
        "contact": {
            "name": "API Support",
            "email": "info@loyalty.lt"
        },
        "license": {
            "name": "API License",
            "url": "https://www.loyalty.lt"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://staging-api.loyalty.lt",
            "description": "Staging API Server"
        },
        {
            "url": "https://api.loyalty.lt",
            "description": "Production API Server"
        }
    ],
    "paths": {
        "/{locale}/admin/login": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Admin login",
                "description": "Authenticate admin user and get JWT token",
                "operationId": "adminLogin",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Admin User"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "format": "email",
                                                            "example": "admin@example.com"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied - not admin",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Admin access required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/admin/logout": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Admin logout",
                "description": "Invalidate admin JWT token",
                "operationId": "adminLogout",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/admin/me": {
            "get": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Get current admin user",
                "description": "Get authenticated admin user profile",
                "operationId": "adminMe",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin user profile",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Admin User"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "admin@example.com"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/health": {
            "get": {
                "tags": [
                    "Admin\\System"
                ],
                "summary": "Get API health status for admin",
                "description": "Returns the detailed health status of the API and its components for admin dashboard",
                "operationId": "getAdminHealthStatus",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "All systems operational"
                                                },
                                                "data": {
                                                    "properties": {
                                                        "version": {
                                                            "type": "string",
                                                            "example": "1.0.0"
                                                        },
                                                        "environment": {
                                                            "type": "string",
                                                            "example": "production"
                                                        },
                                                        "components": {
                                                            "properties": {
                                                                "api": {
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "string",
                                                                            "example": "ok"
                                                                        },
                                                                        "latency": {
                                                                            "type": "string",
                                                                            "example": "12ms"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "database": {
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "string",
                                                                            "example": "ok"
                                                                        },
                                                                        "message": {
                                                                            "type": "string",
                                                                            "example": "Connected"
                                                                        },
                                                                        "latency": {
                                                                            "type": "string",
                                                                            "example": "18ms"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "cache": {
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "string",
                                                                            "example": "ok"
                                                                        },
                                                                        "message": {
                                                                            "type": "string",
                                                                            "example": "Operational"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "jwt": {
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "string",
                                                                            "example": "ok"
                                                                        },
                                                                        "message": {
                                                                            "type": "string",
                                                                            "example": "Properly configured"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "memory": {
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "string",
                                                                            "example": "ok"
                                                                        },
                                                                        "message": {
                                                                            "type": "string",
                                                                            "example": "64MB used (6%)"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "queue": {
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "string",
                                                                            "example": "ok"
                                                                        },
                                                                        "message": {
                                                                            "type": "string",
                                                                            "example": "0 pending jobs"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "storage": {
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "string",
                                                                            "example": "ok"
                                                                        },
                                                                        "message": {
                                                                            "type": "string",
                                                                            "example": "2.1GB free (85%)"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/admin/partners/{id}/status": {
            "put": {
                "tags": [
                    "Admin - Partners"
                ],
                "summary": "Update partner status",
                "description": "Update the status of a partner application",
                "operationId": "updatePartnerStatus",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending_review",
                                            "approved",
                                            "documents_signed",
                                            "active",
                                            "rejected"
                                        ]
                                    },
                                    "review_notes": {
                                        "description": "Admin review notes",
                                        "type": "string"
                                    },
                                    "rejection_reason": {
                                        "description": "Reason for rejection (required if status is rejected)",
                                        "type": "string"
                                    },
                                    "send_notification": {
                                        "description": "Whether to send email notification to partner",
                                        "type": "boolean",
                                        "default": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Partner status updated successfully"
                    },
                    "404": {
                        "description": "Partner not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/admin/partners/{id}/send-email": {
            "post": {
                "tags": [
                    "Admin - Partners"
                ],
                "summary": "Send custom email to partner",
                "description": "Send a custom email to partner contact",
                "operationId": "sendPartnerEmail",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "subject",
                                    "message"
                                ],
                                "properties": {
                                    "subject": {
                                        "type": "string",
                                        "example": "Important update regarding your application"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "We need additional information..."
                                    },
                                    "template_type": {
                                        "description": "Email template type",
                                        "type": "string",
                                        "example": "custom"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email sent successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/admin/partners/stats": {
            "get": {
                "tags": [
                    "Admin - Partners"
                ],
                "summary": "Get partner statistics",
                "description": "Get comprehensive statistics about partner applications",
                "operationId": "getPartnerStats",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/admin/partners/{id}/messages": {
            "get": {
                "tags": [
                    "Admin - Partners"
                ],
                "summary": "Get partner messages",
                "description": "Get all messages for a specific partner",
                "operationId": "getPartnerMessages",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "topic",
                        "in": "query",
                        "description": "Filter by topic",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "message_type",
                        "in": "query",
                        "description": "Filter by message type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin - Partners"
                ],
                "summary": "Send message to partner",
                "description": "Send a message from admin to partner",
                "operationId": "sendPartnerMessage",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "subject": {
                                        "type": "string",
                                        "example": "Update on your application"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "We need additional information..."
                                    },
                                    "message_type": {
                                        "type": "string",
                                        "enum": [
                                            "message",
                                            "comment",
                                            "document_request",
                                            "status_update"
                                        ],
                                        "example": "message"
                                    },
                                    "is_internal": {
                                        "description": "Internal note not visible to partner",
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "send_email": {
                                        "description": "Send email notification",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "attachments[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Message sent successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/admin/partners/{id}/messages/{messageId}/attachment/{attachmentId}": {
            "get": {
                "tags": [
                    "Admin - Partners"
                ],
                "summary": "Download message attachment",
                "description": "Download a message attachment file",
                "operationId": "downloadMessageAttachment",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "Message ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "description": "Attachment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File download",
                        "content": {
                            "application/octet-stream": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/admin/partners/{id}/commission/lock": {
            "post": {
                "tags": [
                    "Admin - Partners"
                ],
                "summary": "Lock partner commission rates",
                "description": "Lock commission rates to prevent automatic synchronization",
                "operationId": "lockPartnerCommissionRates",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commission rates locked successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/admin/partners/{id}/commission/unlock": {
            "post": {
                "tags": [
                    "Admin - Partners"
                ],
                "summary": "Unlock partner commission rates",
                "description": "Unlock commission rates to allow automatic synchronization",
                "operationId": "unlockPartnerCommissionRates",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commission rates unlocked successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/admin/partners/{id}/commission/lock-status": {
            "get": {
                "tags": [
                    "Admin - Partners"
                ],
                "summary": "Get commission rate lock status",
                "description": "Get current commission rate lock status and metadata",
                "operationId": "getPartnerCommissionLockStatus",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lock status retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/admin/partners/{id}/commission/force-sync": {
            "post": {
                "tags": [
                    "Admin - Partners"
                ],
                "summary": "Force sync commission rates",
                "description": "Force synchronization of commission rates from global settings (admin only)",
                "operationId": "forceSyncPartnerCommissionRates",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commission rates synced successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/admin/partners/{id}/commission/rates": {
            "put": {
                "tags": [
                    "Admin - Partners"
                ],
                "summary": "Update partner commission rates",
                "description": "Update individual commission rates for a partner",
                "operationId": "updatePartnerCommissionRates",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "stripe_processing_fee_rate": {
                                        "type": "number",
                                        "example": 2.9
                                    },
                                    "stripe_processing_fee_fixed": {
                                        "type": "number",
                                        "example": 0.3
                                    },
                                    "platform_commission_rate": {
                                        "type": "number",
                                        "example": 1.5
                                    },
                                    "platform_commission_fixed": {
                                        "type": "number",
                                        "example": 0
                                    },
                                    "lock_after_update": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Commission rates updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/admin/partners/{id}/sms-accounts": {
            "get": {
                "tags": [
                    "Admin - Partners",
                    "SMS Marketingas"
                ],
                "summary": "Get partner SMS accounts",
                "description": "Get all SMS accounts for a specific partner",
                "operationId": "getPartnerSmsAccounts",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SMS accounts retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin - Partners",
                    "SMS Marketingas",
                    "Melrose Labs"
                ],
                "summary": "Create SMS account via Melrose Labs API",
                "description": "Create new SMS account for partner using Melrose Labs SSG API integration",
                "operationId": "createPartnerSmsAccount",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "account_name",
                                    "contact_name",
                                    "contact_email"
                                ],
                                "properties": {
                                    "account_name": {
                                        "type": "string",
                                        "example": "Partnerio SMS paskyra"
                                    },
                                    "contact_name": {
                                        "type": "string",
                                        "example": "Jonas Jonaitis"
                                    },
                                    "contact_email": {
                                        "type": "string",
                                        "example": "jonas@partner.lt"
                                    },
                                    "contact_phone": {
                                        "type": "string",
                                        "example": "+37060000000"
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "example": "Partner UAB"
                                    },
                                    "auto_activate": {
                                        "description": "Automatically activate account after creation",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "SMS account created successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/admin/partners/{id}/sms-accounts/{smsId}": {
            "get": {
                "tags": [
                    "Admin - Partners",
                    "SMS Marketingas"
                ],
                "summary": "Get specific SMS account",
                "description": "Get details of a specific SMS account",
                "operationId": "getPartnerSmsAccount",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "smsId",
                        "in": "path",
                        "description": "SMS Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SMS account retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin - Partners",
                    "SMS Marketingas"
                ],
                "summary": "Update SMS account",
                "description": "Update an existing SMS account",
                "operationId": "updatePartnerSmsAccount",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "smsId",
                        "in": "path",
                        "description": "SMS Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "account_name": {
                                        "type": "string"
                                    },
                                    "customer_id": {
                                        "type": "string"
                                    },
                                    "account_id": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Leave empty to keep current password",
                                        "type": "string"
                                    },
                                    "host": {
                                        "type": "string"
                                    },
                                    "port": {
                                        "type": "integer"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    },
                                    "connection_timeout": {
                                        "type": "integer"
                                    },
                                    "bind_timeout": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "SMS account updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin - Partners",
                    "SMS Marketingas"
                ],
                "summary": "Delete SMS account",
                "description": "Delete an SMS account",
                "operationId": "deletePartnerSmsAccount",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "smsId",
                        "in": "path",
                        "description": "SMS Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SMS account deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/admin/partners/{id}/sms-stats": {
            "get": {
                "tags": [
                    "Admin - Partners",
                    "SMS Marketingas"
                ],
                "summary": "Get SMS statistics for partner",
                "description": "Get SMS statistics and usage data for the partner",
                "operationId": "getPartnerSmsStats",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SMS statistics retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/admin/partners/{id}/sms-accounts/{smsId}/test-connection": {
            "post": {
                "tags": [
                    "Admin - Partners",
                    "SMS Marketingas"
                ],
                "summary": "Test SMS account connection",
                "description": "Test the connection to SMS provider for the account",
                "operationId": "testPartnerSmsConnection",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "smsId",
                        "in": "path",
                        "description": "SMS Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection test completed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/audit-logs": {
            "get": {
                "tags": [
                    "Audit Logs"
                ],
                "summary": "List audit logs",
                "description": "Get a list of audit logs with filtering options",
                "operationId": "listAuditLogs",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Filter logs by user ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Filter logs by action type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "user_create"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter from date (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-01"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter to date (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-12-31"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "user_create"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Created new user account"
                                                    },
                                                    "ip_address": {
                                                        "type": "string",
                                                        "example": "192.168.1.1"
                                                    },
                                                    "user_agent": {
                                                        "type": "string",
                                                        "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
                                                    },
                                                    "additional_data": {
                                                        "type": "object"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-01-01T10:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-01-01T10:00:00Z"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 150
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/audit-logs/{id}": {
            "get": {
                "tags": [
                    "Audit Logs"
                ],
                "summary": "Get audit log details",
                "description": "Get details of a specific audit log entry",
                "operationId": "getAuditLog",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Audit log ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/audit-logs/action-types": {
            "get": {
                "tags": [
                    "Audit Logs"
                ],
                "summary": "Get available action types",
                "description": "Get a list of all available audit log action types",
                "operationId": "getAuditLogActionTypes",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user",
                "description": "Get a JWT via given credentials, either email/password or phone/OTP",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User email (required if phone not provided)",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "phone": {
                                        "description": "User phone number (required if email not provided)",
                                        "type": "string",
                                        "example": "+37061234567"
                                    },
                                    "password": {
                                        "description": "User password (required if OTP not provided)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "otp": {
                                        "description": "One-time password (required if password not provided)",
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "user@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+37061234567"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "member"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "403": {
                        "description": "Account inactive"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/{locale}/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account",
                "operationId": "register",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User full name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "phone": {
                                        "description": "User phone number",
                                        "type": "string",
                                        "example": "+37061234567"
                                    },
                                    "password": {
                                        "description": "User password (optional for member role)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "role": {
                                        "description": "User role (requires admin permissions for elevated roles)",
                                        "type": "string",
                                        "enum": [
                                            "member",
                                            "partner_staff",
                                            "partner",
                                            "loyalty_staff",
                                            "super_admin",
                                            "shop_integration"
                                        ],
                                        "example": "member"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "user@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+37061234567"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "member"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions to create elevated roles"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/{locale}/auth/request-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request OTP code",
                "description": "Request a one-time password sent via SMS",
                "operationId": "requestOtp",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone_country_code",
                                    "phone_local_number",
                                    "type"
                                ],
                                "properties": {
                                    "phone_country_code": {
                                        "description": "Country code without leading +",
                                        "type": "string",
                                        "example": "370"
                                    },
                                    "phone_local_number": {
                                        "description": "Local number without leading +",
                                        "type": "string",
                                        "example": "61234567"
                                    },
                                    "type": {
                                        "description": "OTP purpose (login, register, reset_password)",
                                        "type": "string",
                                        "example": "login"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP code sent to your phone"
                                        },
                                        "data": {
                                            "properties": {
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:15:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Too many attempts or other error"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/{locale}/auth/verify-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP code",
                "description": "Verify a one-time password sent via SMS",
                "operationId": "verifyOtp",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone_country_code",
                                    "phone_local_number",
                                    "code",
                                    "type"
                                ],
                                "properties": {
                                    "phone_country_code": {
                                        "description": "Country code without leading +",
                                        "type": "string",
                                        "example": "370"
                                    },
                                    "phone_local_number": {
                                        "description": "Local number without leading +",
                                        "type": "string",
                                        "example": "61234567"
                                    },
                                    "code": {
                                        "description": "OTP code",
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "type": {
                                        "description": "OTP purpose (login, register, reset_password)",
                                        "type": "string",
                                        "example": "login"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verification successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                },
                                                "user": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP verified successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid OTP"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/{locale}/auth/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request password reset",
                "description": "Request a password reset via SMS or email",
                "operationId": "forgotPassword",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User email (required if phone not provided)",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "phone": {
                                        "description": "User phone number (required if email not provided)",
                                        "type": "string",
                                        "example": "+37061234567"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reset instructions sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset instructions sent to your email/phone"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/{locale}/auth/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password",
                "description": "Reset user password using OTP or token",
                "operationId": "resetPassword",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User email (required if phone not provided)",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "phone": {
                                        "description": "User phone number (required if email not provided)",
                                        "type": "string",
                                        "example": "+37061234567"
                                    },
                                    "token": {
                                        "description": "Password reset token (required if OTP not provided)",
                                        "type": "string",
                                        "example": "abc123def456"
                                    },
                                    "otp": {
                                        "description": "OTP code (required if token not provided)",
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password": {
                                        "description": "New password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirm new password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password has been reset successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token/OTP"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/{locale}/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get user profile",
                "description": "Get the authenticated user's profile information",
                "operationId": "me",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "user@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+37061234567"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "member"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/auth/profile": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update profile",
                "description": "Update the authenticated user's profile information",
                "operationId": "updateProfile",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "User full name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "phone": {
                                        "description": "User phone number",
                                        "type": "string",
                                        "example": "+37061234567"
                                    },
                                    "current_password": {
                                        "description": "Current password (required to change password)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "currentpassword123"
                                    },
                                    "password": {
                                        "description": "New password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirm new password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "birthday": {
                                        "description": "User's birthday",
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "address": {
                                        "description": "User's address",
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "description": "User's city",
                                        "type": "string",
                                        "example": "Vilnius"
                                    },
                                    "country_code": {
                                        "description": "User's country code",
                                        "type": "string",
                                        "example": "LT"
                                    },
                                    "zip": {
                                        "description": "User's postal code",
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "gender": {
                                        "description": "User's gender",
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female"
                                        ],
                                        "example": "male"
                                    },
                                    "avatar": {
                                        "description": "User's avatar image (JPEG, PNG, max 2MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated or invalid current password"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/auth/profile/avatar": {
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Delete user avatar",
                "description": "Delete the authenticated user's avatar",
                "operationId": "deleteAvatar",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avatar deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Avatar deleted successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Avatar not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Invalidate the user's JWT token",
                "operationId": "logout",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh token",
                "description": "Refresh the user's JWT token",
                "operationId": "refreshToken",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        },
                                        "user": {
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/auth/create-permanent-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Create a permanent JWT token for a user",
                "description": "Creates a permanent JWT token for super_admin, loyalty_staff, partner, or shop_integration users connecting from Odoo",
                "operationId": "createPermanentToken",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "The locale (e.g. en, lt)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "description": "The user ID to create token for",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "description": {
                                        "description": "Description of token purpose",
                                        "type": "string",
                                        "example": "Odoo integration token"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                                },
                                                "user": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permanent token created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to create permanent tokens",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized to create permanent tokens"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/auth/send-email-verification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send email verification code",
                "description": "Sends a verification code to the specified email address",
                "operationId": "sendEmailVerification",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Email address to verify",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "sendOtp": {
                                        "description": "Whether to send OTP code (true) or verification link (false)",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification code sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Verification code sent successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/auth/verify-email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify email with code",
                "description": "Verifies email address with the provided code",
                "operationId": "verifyEmail",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Email address to verify",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "otp": {
                                        "description": "Verification code",
                                        "type": "string",
                                        "example": "1234"
                                    },
                                    "verifyOtp": {
                                        "description": "Whether verifying with OTP code (true) or verification link (false)",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired verification code"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/auth/verify-email/{token}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify email with link",
                "description": "Verifies email address with the provided token from verification link",
                "operationId": "verifyEmailLink",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "description": "Verification token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired verification token"
                    }
                }
            }
        },
        "/{locale}/auth/delete-account": {
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Delete user account",
                "description": "Permanently delete the authenticated user's account and all associated data",
                "operationId": "deleteAccount",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete account"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/auth/change-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change user password",
                "description": "Change the authenticated user's password",
                "operationId": "changePassword",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "current_password"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new_password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Current password is incorrect"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/validate-reset-token": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Validate password reset token",
                "operationId": "14b085d80b45d980d2f0352278de59a5",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token is valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "valid": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "partner@example.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "valid": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/bill-splits": {
            "get": {
                "tags": [
                    "Bill Splitting"
                ],
                "summary": "List bill splits",
                "description": "Get a list of the user's bill splits",
                "operationId": "listBillSplits",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "active",
                                "completed",
                                "cancelled",
                                "expired"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Dinner at Restaurant"
                                                    },
                                                    "total_amount": {
                                                        "type": "number",
                                                        "example": 150.5
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "active"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Bill Splitting"
                ],
                "summary": "Create bill split",
                "description": "Create a new bill split for the authenticated user",
                "operationId": "createBillSplit",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Bill split title",
                                        "type": "string",
                                        "example": "Dinner at Restaurant"
                                    },
                                    "description": {
                                        "description": "Bill split description",
                                        "type": "string",
                                        "example": "Group dinner payment"
                                    },
                                    "total_amount": {
                                        "description": "Total amount to split",
                                        "type": "number",
                                        "example": 150.5
                                    },
                                    "currency": {
                                        "description": "Currency code",
                                        "type": "string",
                                        "enum": [
                                            "EUR",
                                            "USD"
                                        ],
                                        "example": "EUR"
                                    },
                                    "split_type": {
                                        "description": "Split type",
                                        "type": "string",
                                        "enum": [
                                            "equal",
                                            "custom",
                                            "by_items"
                                        ],
                                        "example": "equal"
                                    },
                                    "expires_at": {
                                        "description": "Expiration date",
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "participants": {
                                        "description": "List of participants",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+37060000000"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Bill split created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bill split created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/bill-splits/{id}": {
            "get": {
                "tags": [
                    "Bill Splitting"
                ],
                "summary": "Get bill split details",
                "description": "Get details of a specific bill split",
                "operationId": "getBillSplit",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bill split ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to view this bill split"
                    },
                    "404": {
                        "description": "Bill split not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Bill Splitting"
                ],
                "summary": "Update bill split",
                "description": "Update a bill split's information",
                "operationId": "updateBillSplit",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bill split ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated dinner title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "total_amount": {
                                        "type": "number",
                                        "example": 200
                                    },
                                    "split_type": {
                                        "type": "string",
                                        "enum": [
                                            "equal",
                                            "custom",
                                            "by_items"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bill split updated successfully"
                    },
                    "403": {
                        "description": "Forbidden - No permission to update this bill split"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/bill-splits/{id}/activate": {
            "post": {
                "tags": [
                    "Bill Splitting"
                ],
                "summary": "Activate bill split",
                "description": "Activate a bill split and send payment links to participants",
                "operationId": "activateBillSplit",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bill split ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bill split activated successfully"
                    },
                    "403": {
                        "description": "Forbidden - Only creator can activate"
                    },
                    "422": {
                        "description": "Bill split cannot be activated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/bill-splits/preview": {
            "post": {
                "tags": [
                    "Bill Splitting"
                ],
                "summary": "Get split preview",
                "description": "Calculate split preview with commission",
                "operationId": "getSplitPreview",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "total_amount": {
                                        "type": "number",
                                        "example": 100
                                    },
                                    "participants_count": {
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "split_type": {
                                        "type": "string",
                                        "enum": [
                                            "equal",
                                            "custom",
                                            "by_items"
                                        ],
                                        "example": "equal"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Split preview calculated successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/bill-splits/commission-settings": {
            "get": {
                "tags": [
                    "Bill Splitting"
                ],
                "summary": "Get commission settings",
                "description": "Get commission settings for bill splitting",
                "operationId": "getCommissionSettings",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commission settings retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bill-splits/payment-callback": {
            "post": {
                "tags": [
                    "Bill Splitting"
                ],
                "summary": "Handle payment callback",
                "description": "Handle payment callback from Stripe",
                "operationId": "paymentCallback",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "payment_intent_id": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Callback processed successfully"
                    }
                }
            }
        },
        "/{locale}/bill-splits/{billSplitId}/participants/{participantId}/payment-link": {
            "get": {
                "tags": [
                    "Bill Splitting"
                ],
                "summary": "Get participant payment link",
                "description": "Get payment link for a specific participant",
                "operationId": "getPaymentLink",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "billSplitId",
                        "in": "path",
                        "description": "Bill split ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "participantId",
                        "in": "path",
                        "description": "Participant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment link retrieved successfully"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Bill split or participant not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/coupons": {
            "get": {
                "tags": [
                    "Coupons"
                ],
                "summary": "List coupons",
                "description": "Get a list of all coupons for the authenticated user",
                "operationId": "listCoupons",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "used",
                                "expired"
                            ],
                            "example": "active"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "offer_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "ABCD1234-1624021288"
                                                    },
                                                    "qr_code": {
                                                        "type": "string",
                                                        "example": "ABCD1234-1624021288"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "active"
                                                    },
                                                    "expiry_time": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-06-01T10:01:00Z"
                                                    },
                                                    "redeemed_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": null
                                                    },
                                                    "redeemed_shop_id": {
                                                        "type": "integer",
                                                        "example": null
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-06-01T10:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-06-01T10:00:00Z"
                                                    },
                                                    "offer": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "20% off on all products"
                                                            },
                                                            "partner": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Acme Restaurants"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/offers/{offerId}/generate-coupon": {
            "post": {
                "tags": [
                    "Coupons"
                ],
                "summary": "Generate coupon from offer",
                "description": "Generate a new coupon for the authenticated user from an offer",
                "operationId": "generateCouponFromOffer",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "offerId",
                        "in": "path",
                        "description": "Offer ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Coupon generated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "offer_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "ABCD1234-1624021288"
                                                },
                                                "qr_code": {
                                                    "type": "string",
                                                    "example": "ABCD1234-1624021288"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "expiry_time": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:01:00Z"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Offer not found"
                    },
                    "400": {
                        "description": "Offer inactive or coupon already exists"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/coupons/{id}": {
            "get": {
                "tags": [
                    "Coupons"
                ],
                "summary": "Get coupon details",
                "description": "Get details of a specific coupon",
                "operationId": "getCoupon",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "offer_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "ABCD1234-1624021288"
                                                },
                                                "qr_code": {
                                                    "type": "string",
                                                    "example": "ABCD1234-1624021288"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "expiry_time": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:01:00Z"
                                                },
                                                "redeemed_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": null
                                                },
                                                "redeemed_shop_id": {
                                                    "type": "integer",
                                                    "example": null
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                },
                                                "offer": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "20% off on all products"
                                                        },
                                                        "partner": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Acme Restaurants"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "shops": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Coupon not found"
                    },
                    "403": {
                        "description": "Forbidden - No permission to view this coupon"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/coupons/{id}/redeem": {
            "post": {
                "tags": [
                    "Coupons"
                ],
                "summary": "Redeem coupon",
                "description": "Redeem a coupon at a partner shop",
                "operationId": "redeemCoupon",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "shop_id"
                                ],
                                "properties": {
                                    "shop_id": {
                                        "description": "Shop ID where coupon is redeemed",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Coupon redeemed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Coupon redeemed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "used"
                                                },
                                                "redeemed_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:30:00Z"
                                                },
                                                "redeemed_shop_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Coupon or shop not found"
                    },
                    "403": {
                        "description": "Forbidden - Only partners/staff can redeem coupons"
                    },
                    "400": {
                        "description": "Bad request - Coupon expired or already used"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/coupons/verify": {
            "post": {
                "tags": [
                    "Coupons"
                ],
                "summary": "Verify coupon",
                "description": "Verify a coupon code is valid for redemption",
                "operationId": "verifyCoupon",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "ABC123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Coupon is valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "ABC123"
                                                },
                                                "is_valid": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "valid_until": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T00:00:00Z"
                                                },
                                                "offer": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "20% off on all products"
                                                        },
                                                        "discount_type": {
                                                            "type": "string",
                                                            "example": "percentage"
                                                        },
                                                        "discount_value": {
                                                            "type": "number",
                                                            "example": 20
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Coupon is invalid or has expired"
                    },
                    "404": {
                        "description": "Coupon not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/error-codes": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get API error codes",
                "description": "Returns a list of all API error codes with descriptions",
                "operationId": "getErrorCodes",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error codes retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/games": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "List all available games",
                "operationId": "15db0e7095b29d7a8f6a7544e87c6fe1",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "partner_id",
                        "in": "query",
                        "description": "Filter by partner ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "shop_id",
                        "in": "query",
                        "description": "Filter by shop ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by game type (collect, visit, spend)",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "collect",
                                "visit",
                                "spend"
                            ]
                        }
                    },
                    {
                        "name": "active_only",
                        "in": "query",
                        "description": "Filter only active games",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available games"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/{id}": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get a specific game",
                "operationId": "7ac195563ee63d75f53c6b01fc53189c",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game details with user progress"
                    },
                    "404": {
                        "description": "Game not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/{id}/start": {
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Start a new game session",
                "operationId": "bc2b3d2e96919317fe105945c902bb0a",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "location": {
                                        "description": "User location data",
                                        "type": "object"
                                    },
                                    "shop_id": {
                                        "description": "Shop ID where the game is started",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Game session started successfully"
                    },
                    "404": {
                        "description": "Game not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/sessions/{session_key}/progress": {
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Record game progress",
                "operationId": "3fd19343e2245d216fc22a598933e410",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "session_key",
                        "in": "path",
                        "description": "Game session key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "action"
                                ],
                                "properties": {
                                    "action": {
                                        "description": "Action type (visit, collect, spend)",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "Value of the action (e.g., amount spent)",
                                        "type": "integer"
                                    },
                                    "location": {
                                        "description": "Location data",
                                        "type": "object"
                                    },
                                    "data": {
                                        "description": "Additional action data",
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Progress recorded successfully"
                    },
                    "404": {
                        "description": "Game session not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/{id}/sessions/{session_key}": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get game session details",
                "operationId": "434737799de95b08f59a69c3e948b705",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "session_key",
                        "in": "path",
                        "description": "Game session key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game session details"
                    },
                    "404": {
                        "description": "Game session not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/{id}/cancel": {
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Cancel a game",
                "operationId": "a0222f1bc7c5d40a2bc161e2aa690b81",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game cancelled successfully"
                    },
                    "404": {
                        "description": "Game not found or no active session"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/user/games/history": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get user game history",
                "operationId": "2adc442a057162fb0d7a6bdbde83d398",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (completed, active, cancelled, expired)",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "completed",
                                "active",
                                "cancelled",
                                "expired"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's game history"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/{id}/spin-wheel": {
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Spin the wheel for a wheel game",
                "operationId": "4d9512e9a948948d5dc80bb6a892edbe",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "session_key"
                                ],
                                "properties": {
                                    "session_key": {
                                        "description": "Active game session key",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Wheel spin result"
                    },
                    "400": {
                        "description": "Bad request or invalid game type"
                    },
                    "404": {
                        "description": "Game or session not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/{id}/quiz-questions": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get quiz questions for a game",
                "operationId": "05d4704c0aa312b3b0617f97eb4339f1",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "session_key",
                        "in": "query",
                        "description": "Active game session key",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of quiz questions"
                    },
                    "400": {
                        "description": "Bad request or invalid game type"
                    },
                    "404": {
                        "description": "Game or questions not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/{id}/answer-question": {
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Submit an answer to a quiz question",
                "operationId": "4b031e6265c1d87226ad9d41c1f395f2",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "session_key",
                                    "question_id",
                                    "answer_index",
                                    "time_taken"
                                ],
                                "properties": {
                                    "session_key": {
                                        "description": "Active game session key",
                                        "type": "string"
                                    },
                                    "question_id": {
                                        "description": "ID of the question being answered",
                                        "type": "integer"
                                    },
                                    "answer_index": {
                                        "description": "Index of the selected answer",
                                        "type": "integer"
                                    },
                                    "time_taken": {
                                        "description": "Time taken to answer in seconds",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Answer result"
                    },
                    "400": {
                        "description": "Bad request or invalid game type"
                    },
                    "404": {
                        "description": "Game, session, or question not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/{id}/match-pair": {
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Match a pair of cards in a memory game",
                "operationId": "41c108ba8a3847990810957705b71340",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "session_key",
                                    "memory_set_id",
                                    "first_position",
                                    "second_position"
                                ],
                                "properties": {
                                    "session_key": {
                                        "description": "Active game session key",
                                        "type": "string"
                                    },
                                    "memory_set_id": {
                                        "description": "ID of the memory set",
                                        "type": "integer"
                                    },
                                    "first_position": {
                                        "description": "Position of the first card",
                                        "type": "integer"
                                    },
                                    "second_position": {
                                        "description": "Position of the second card",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Match result"
                    },
                    "400": {
                        "description": "Bad request or invalid game type"
                    },
                    "404": {
                        "description": "Game, session, or memory set not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/{id}/scratch-ticket": {
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Scratch a ticket in a scratch game",
                "operationId": "50311f8cf7d3a0e3cc3a906d540cfb51",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "session_key",
                                    "ticket_id"
                                ],
                                "properties": {
                                    "session_key": {
                                        "description": "Active game session key",
                                        "type": "string"
                                    },
                                    "ticket_id": {
                                        "description": "ID of the ticket to scratch",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Scratch result"
                    },
                    "400": {
                        "description": "Bad request or invalid game type"
                    },
                    "404": {
                        "description": "Game, session, or ticket not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/{id}/collect-item": {
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Collect an item in a collection game",
                "operationId": "1c513b48c1eb8e0a157fb4b325e918e0",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "session_key"
                                ],
                                "properties": {
                                    "session_key": {
                                        "description": "Active game session key",
                                        "type": "string"
                                    },
                                    "item_id": {
                                        "description": "ID of the specific item to collect (optional)",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Collection result"
                    },
                    "400": {
                        "description": "Bad request or invalid game type"
                    },
                    "404": {
                        "description": "Game, session, or item not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/{id}/collection-progress": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get user's collection progress",
                "operationId": "9b802c229d13e1063027f18bb55f3fa9",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collection progress details"
                    },
                    "400": {
                        "description": "Bad request or invalid game type"
                    },
                    "404": {
                        "description": "Game not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/{id}/sessions": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get game sessions for a specific game",
                "operationId": "6b1a7d6a32d9098a72c2071f2de18ae5",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Filter by user ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by session status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "completed",
                                "cancelled",
                                "expired"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "session_key": {
                                                        "type": "string",
                                                        "example": "abc123"
                                                    },
                                                    "game_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "active"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Game sessions retrieved successfully"
                                        },
                                        "meta": {
                                            "properties": {
                                                "pagination": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 2
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Game not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Game not found"
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "RESOURCE_NOT_FOUND"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/{id}/stats": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get game statistics",
                "operationId": "64a7b3b9a1f437faba80c58c8acf8c1c",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game statistics"
                    },
                    "404": {
                        "description": "Game not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/my": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get games the user has participated in",
                "operationId": "0860ef6f8b36129f988d164ba547daf2",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of games the user has participated in"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/sessions/{session_key}": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get game session by session key",
                "operationId": "38b3e21b6914953e159ca89d4f563cae",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "session_key",
                        "in": "path",
                        "description": "Session key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Game session found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Game session not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Game session not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/{id}/stamp-settings": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get stamp settings for a game",
                "operationId": "b7b51ba8345347e79f33b59aa73c26f8",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stamp game settings"
                    },
                    "404": {
                        "description": "Game not found or not a stamp game"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/shops": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get partners available for games",
                "operationId": "231482ab26da2686a6bcd2daeaf56fa9",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term to filter partners by name or shops by name/address/city",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "game_id",
                        "in": "query",
                        "description": "Filter partners by game ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search_mode",
                        "in": "query",
                        "description": "Search mode: 'partners' (default), 'shops', or 'both'",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "partners",
                                "shops",
                                "both"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of partners with their shops"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/sessions/{session_key}/claim-reward": {
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Claim reward for completed game",
                "operationId": "ae8808b8455c4c14dd46dcfeec08c182",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "session_key",
                        "in": "path",
                        "description": "Game session key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reward claimed successfully"
                    },
                    "400": {
                        "description": "Game not completed or reward already claimed"
                    },
                    "404": {
                        "description": "Game session not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/games/{id}/coupons": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get user's coupons for a specific game",
                "operationId": "7ff6b28a91cbabd1cd5efd2a32897860",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user's coupons for the game"
                    },
                    "404": {
                        "description": "Game not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/game-sessions/start": {
            "post": {
                "tags": [
                    "Game Sessions"
                ],
                "summary": "Start a new game session",
                "description": "Creates a new gaming session for a specific game and user",
                "operationId": "startGameSession",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "game_id",
                                    "shop_id"
                                ],
                                "properties": {
                                    "game_id": {
                                        "description": "The ID of the game",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "description": "The ID of the user (required for staff roles)",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "shop_id": {
                                        "description": "The ID of the shop where the session is started",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "location": {
                                        "description": "Location data for check-in games",
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Game session started successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Game session started successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "session_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "session_key": {
                                                    "type": "string",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "game": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Collect Points"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "collect"
                                                        },
                                                        "total_steps": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "current_step": {
                                                            "type": "integer",
                                                            "example": 0
                                                        },
                                                        "rules": {
                                                            "type": "object"
                                                        },
                                                        "reward_description": {
                                                            "type": "string",
                                                            "example": "Get a free coffee"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Business logic error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/game-sessions/current": {
            "get": {
                "tags": [
                    "Game Sessions"
                ],
                "summary": "Get current game session",
                "description": "Get the current active game session for the authenticated user",
                "operationId": "getCurrentGameSession",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Current game session retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "session_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "session_key": {
                                                    "type": "string",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "game": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Collect Points"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "collect"
                                                        },
                                                        "total_steps": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "current_step": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "rules": {
                                                            "type": "object"
                                                        },
                                                        "reward_description": {
                                                            "type": "string",
                                                            "example": "Get a free coffee"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No active game session found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/game-sessions/{session_key}": {
            "put": {
                "tags": [
                    "Game Sessions"
                ],
                "summary": "Update game session with progress",
                "description": "Update a game session with new progress",
                "operationId": "updateGameSession",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "session_key",
                        "in": "path",
                        "description": "UUID of the session",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "action"
                                ],
                                "properties": {
                                    "action": {
                                        "description": "The action being performed",
                                        "type": "string",
                                        "enum": [
                                            "scan",
                                            "collect",
                                            "visit",
                                            "spend",
                                            "complete",
                                            "spin",
                                            "answer",
                                            "checkin",
                                            "qr_scan"
                                        ],
                                        "example": "collect"
                                    },
                                    "action_data": {
                                        "description": "Data related to the action",
                                        "type": "object",
                                        "example": {
                                            "product_id": 123,
                                            "price": 5.5
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Game session updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Game progress updated"
                                        },
                                        "data": {
                                            "properties": {
                                                "session_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "session_key": {
                                                    "type": "string",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "progress": {
                                                    "properties": {
                                                        "current_step": {
                                                            "type": "integer",
                                                            "example": 4
                                                        },
                                                        "total_steps": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "completed": {
                                                            "type": "boolean",
                                                            "example": false
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Game session not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Business logic error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/game-sessions/{session_key}/end": {
            "post": {
                "tags": [
                    "Game Sessions"
                ],
                "summary": "End game session",
                "description": "End an active game session",
                "operationId": "endGameSession",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "session_key",
                        "in": "path",
                        "description": "UUID of the session",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "The end status",
                                        "type": "string",
                                        "enum": [
                                            "completed",
                                            "cancelled",
                                            "expired"
                                        ],
                                        "example": "completed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Game session ended successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Game session ended"
                                        },
                                        "data": {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Game session not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/game-sessions/history": {
            "get": {
                "tags": [
                    "Game Sessions"
                ],
                "summary": "Get user's game history",
                "description": "Get the history of game sessions for the authenticated user",
                "operationId": "gameSessionHistory",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "game_id",
                        "in": "query",
                        "description": "Filter by game ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (active, completed, cancelled, expired)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "completed",
                                "cancelled",
                                "expired"
                            ],
                            "example": "completed"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game sessions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "game_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "shop_id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "completed"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "game": {
                                                        "type": "object"
                                                    },
                                                    "shop": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 75
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/game-sessions/{id}": {
            "get": {
                "tags": [
                    "Game Sessions"
                ],
                "summary": "Get game session details",
                "description": "Get details of a specific game session",
                "operationId": "showGameSession",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the session",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game session details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "game_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "shop_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "data": {
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "game": {
                                                    "type": "object"
                                                },
                                                "shop": {
                                                    "type": "object"
                                                },
                                                "user": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Game session not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/health": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get API health status",
                "description": "Returns the health status of the API and its components",
                "operationId": "getHealthStatus",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/SuccessResponse"
                                        },
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "All systems operational"
                                                },
                                                "data": {
                                                    "properties": {
                                                        "version": {
                                                            "type": "string",
                                                            "example": "1.0.0"
                                                        },
                                                        "environment": {
                                                            "type": "string",
                                                            "example": "production"
                                                        },
                                                        "components": {
                                                            "properties": {
                                                                "api": {
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "string",
                                                                            "example": "ok"
                                                                        },
                                                                        "latency": {
                                                                            "type": "string",
                                                                            "example": "12ms"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "database": {
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "string",
                                                                            "example": "ok"
                                                                        },
                                                                        "message": {
                                                                            "type": "string",
                                                                            "example": "Connected"
                                                                        },
                                                                        "latency": {
                                                                            "type": "string",
                                                                            "example": "18ms"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "cache": {
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "string",
                                                                            "example": "ok"
                                                                        },
                                                                        "message": {
                                                                            "type": "string",
                                                                            "example": "Operational"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "jwt": {
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "string",
                                                                            "example": "ok"
                                                                        },
                                                                        "message": {
                                                                            "type": "string",
                                                                            "example": "Properly configured"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "memory": {
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "string",
                                                                            "example": "ok"
                                                                        },
                                                                        "message": {
                                                                            "type": "string",
                                                                            "example": "64MB used (6%)"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/loyalty-cards": {
            "get": {
                "tags": [
                    "Loyalty Cards"
                ],
                "summary": "List loyalty cards",
                "description": "Get a list of the user's loyalty cards",
                "operationId": "listLoyaltyCards",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "card_number": {
                                                        "type": "string",
                                                        "example": "LC00000001"
                                                    },
                                                    "qr_code": {
                                                        "type": "string",
                                                        "example": "550e8400-e29b-41d4-a716-446655440000"
                                                    },
                                                    "barcode_type": {
                                                        "type": "string",
                                                        "example": "QR"
                                                    },
                                                    "card_type": {
                                                        "type": "string",
                                                        "example": "universal"
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "last_used_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-01-15T14:30:00Z"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-01-01T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-01-15T14:30:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Loyalty Cards"
                ],
                "summary": "Create loyalty card",
                "description": "Create a new loyalty card for the authenticated user. Only applicable for members with 'member' role.",
                "operationId": "createLoyaltyCard",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "card_type": {
                                        "description": "Card type",
                                        "type": "string",
                                        "enum": [
                                            "universal",
                                            "partner_specific"
                                        ],
                                        "example": "universal"
                                    },
                                    "barcode_type": {
                                        "description": "Barcode type",
                                        "type": "string",
                                        "enum": [
                                            "QR",
                                            "EAN13",
                                            "CODE128",
                                            "NFC"
                                        ],
                                        "example": "QR"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Loyalty card created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Loyalty card created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "card_number": {
                                                    "type": "string",
                                                    "example": "LC00000002"
                                                },
                                                "qr_code": {
                                                    "type": "string",
                                                    "example": "550e8400-e29b-41d4-a716-446655440001"
                                                },
                                                "barcode_type": {
                                                    "type": "string",
                                                    "example": "QR"
                                                },
                                                "card_type": {
                                                    "type": "string",
                                                    "example": "universal"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-20T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-20T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Only members can create loyalty cards",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Only members can create loyalty cards"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 1005
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/loyalty-cards/{id}": {
            "get": {
                "tags": [
                    "Loyalty Cards"
                ],
                "summary": "Get loyalty card details",
                "description": "Get details of a specific loyalty card",
                "operationId": "getLoyaltyCard",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Loyalty card ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "card_number": {
                                                    "type": "string",
                                                    "example": "LC00000001"
                                                },
                                                "qr_code": {
                                                    "type": "string",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "barcode_type": {
                                                    "type": "string",
                                                    "example": "QR"
                                                },
                                                "card_type": {
                                                    "type": "string",
                                                    "example": "universal"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "last_used_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-15T14:30:00Z"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-15T14:30:00Z"
                                                },
                                                "points_total": {
                                                    "type": "integer",
                                                    "example": 350
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to view this card",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have permission to view this card"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 1005
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Loyalty card not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Loyalty Cards"
                ],
                "summary": "Update loyalty card",
                "description": "Update a loyalty card's information",
                "operationId": "updateLoyaltyCard",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Loyalty card ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "is_active": {
                                        "description": "Whether the card is active",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Loyalty card updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Loyalty card updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "card_number": {
                                                    "type": "string",
                                                    "example": "LC00000001"
                                                },
                                                "qr_code": {
                                                    "type": "string",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "barcode_type": {
                                                    "type": "string",
                                                    "example": "QR"
                                                },
                                                "card_type": {
                                                    "type": "string",
                                                    "example": "universal"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "last_used_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-15T14:30:00Z"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-20T15:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to update this card"
                    },
                    "404": {
                        "description": "Loyalty card not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Loyalty Cards"
                ],
                "summary": "Deactivate loyalty card",
                "description": "Deactivate a loyalty card instead of permanently deleting it",
                "operationId": "deactivateLoyaltyCard",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Loyalty card ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Loyalty card deactivated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Loyalty card deactivated successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to deactivate this card"
                    },
                    "404": {
                        "description": "Loyalty card not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/loyalty-cards/{id}/update-design": {
            "put": {
                "tags": [
                    "Loyalty Cards"
                ],
                "summary": "Update loyalty card design",
                "description": "Update a loyalty card's design settings including color and sticker",
                "operationId": "updateLoyaltyCardDesign",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Loyalty card ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "card_design": {
                                        "properties": {
                                            "cardColor": {
                                                "description": "Card color in hex format",
                                                "type": "string",
                                                "example": "#004EE4"
                                            },
                                            "cardSticker": {
                                                "description": "Card sticker identifier",
                                                "type": "string",
                                                "example": "sticker1"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Loyalty card design updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Loyalty card design updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "card_design": {
                                                    "properties": {
                                                        "cardColor": {
                                                            "type": "string",
                                                            "example": "#004EE4"
                                                        },
                                                        "cardSticker": {
                                                            "type": "string",
                                                            "example": "sticker1"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to update this card"
                    },
                    "404": {
                        "description": "Loyalty card not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/loyalty-cards/third-party": {
            "post": {
                "tags": [
                    "Loyalty Cards"
                ],
                "summary": "Add a third-party card",
                "description": "Add a third-party card with number and optional image",
                "operationId": "addThirdPartyCard",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "number"
                                ],
                                "properties": {
                                    "number": {
                                        "description": "Card number",
                                        "type": "string",
                                        "example": "12345678"
                                    },
                                    "name": {
                                        "description": "Card name",
                                        "type": "string",
                                        "example": "My Store Card"
                                    },
                                    "image": {
                                        "description": "Image of the card (optional)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "card_design": {
                                        "description": "Card design information (optional)",
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Card added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Card added successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "card_number": {
                                                    "type": "string",
                                                    "example": "12345678"
                                                },
                                                "card_name": {
                                                    "type": "string",
                                                    "example": "My Store Card"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/loyalty-cards/scan": {
            "post": {
                "tags": [
                    "Loyalty Cards"
                ],
                "summary": "Add a third-party card by scanning",
                "description": "Add a third-party card by scanning a barcode or QR code",
                "operationId": "scanThirdPartyCard",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "card_name",
                                    "scan_result"
                                ],
                                "properties": {
                                    "card_name": {
                                        "description": "Card name",
                                        "type": "string",
                                        "example": "Grocery Store Card"
                                    },
                                    "partner_id": {
                                        "description": "Partner ID (optional)",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "scan_result": {
                                        "description": "Scanned card number result",
                                        "type": "string",
                                        "example": "12345678"
                                    },
                                    "barcode_type": {
                                        "description": "Detected barcode type",
                                        "type": "string",
                                        "example": "CODE128"
                                    },
                                    "barcode_image": {
                                        "description": "Base64 encoded image of the scanned barcode",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Card added successfully by scanning",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Card added successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "card_number": {
                                                    "type": "string",
                                                    "example": "12345678"
                                                },
                                                "card_name": {
                                                    "type": "string",
                                                    "example": "Grocery Store Card"
                                                },
                                                "barcode_type": {
                                                    "type": "string",
                                                    "example": "CODE128"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/loyalty-cards/nfc": {
            "post": {
                "tags": [
                    "Loyalty Cards"
                ],
                "summary": "Add a third-party card by NFC",
                "description": "Add a third-party card by reading NFC tag",
                "operationId": "nfcThirdPartyCard",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "card_name",
                                    "nfc_data"
                                ],
                                "properties": {
                                    "card_name": {
                                        "description": "Card name",
                                        "type": "string",
                                        "example": "My Gym Card"
                                    },
                                    "partner_id": {
                                        "description": "Partner ID (optional)",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "nfc_data": {
                                        "description": "Data read from NFC tag",
                                        "type": "string",
                                        "example": "ABCDEF123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Card added successfully by NFC",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Card added successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "card_number": {
                                                    "type": "string",
                                                    "example": "ABCDEF123456"
                                                },
                                                "card_name": {
                                                    "type": "string",
                                                    "example": "My Gym Card"
                                                },
                                                "barcode_type": {
                                                    "type": "string",
                                                    "example": "NFC"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/loyalty-cards/ocr": {
            "post": {
                "tags": [
                    "Loyalty Cards"
                ],
                "summary": "Process an image with OCR to extract card data",
                "description": "Upload a card image and use OCR to extract card number and other information",
                "operationId": "ocrCardProcess",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "Image of the card to process",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "use_gemini": {
                                        "description": "Whether to use Gemini AI for enhanced OCR (optional, defaults to true)",
                                        "type": "boolean"
                                    },
                                    "use_vision_only": {
                                        "description": "Use only Google Vision API for OCR without Gemini (optional, defaults to false)",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Card data extracted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Card data extracted successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "example": "6789012345"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "JOHN DOE",
                                                    "nullable": true
                                                },
                                                "expiry": {
                                                    "type": "string",
                                                    "example": "01/25",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/loyalty-cards/refresh-qr/{qr_code}": {
            "post": {
                "tags": [
                    "Loyalty Cards"
                ],
                "summary": "Refresh loyalty card QR code",
                "description": "Generates a new QR code for a specific loyalty card",
                "operationId": "refreshLoyaltyCardQr",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "qr_code",
                        "in": "path",
                        "description": "The current QR code of the loyalty card",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR code refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "QR code refreshed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "qr_code": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "new-uuid-generated-here"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Cannot refresh this card"
                    },
                    "404": {
                        "description": "Loyalty card not found with the given QR code"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/loyalty-cards/scan-partner-card": {
            "post": {
                "tags": [
                    "Loyalty Cards"
                ],
                "summary": "Scan partner card QR code",
                "description": "Scan a partner card QR code to add partner-specific loyalty card",
                "operationId": "scanPartnerCard",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "qr_code"
                                ],
                                "properties": {
                                    "qr_code": {
                                        "description": "Partner card QR code",
                                        "type": "string",
                                        "example": "PARTNER-QR-123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Partner card added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Partner card added successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "card_number": {
                                                    "type": "string",
                                                    "example": "LC00000001"
                                                },
                                                "qr_code": {
                                                    "type": "string",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "card_name": {
                                                    "type": "string",
                                                    "example": "Partner Card"
                                                },
                                                "partner": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Partner Name"
                                                        },
                                                        "logo_url": {
                                                            "type": "string",
                                                            "example": "https://example.com/logo.png"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Partner card template not found"
                    },
                    "422": {
                        "description": "Validation error or card already exists"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/loyalty-cards/reorder": {
            "put": {
                "tags": [
                    "Loyalty Cards"
                ],
                "summary": "Reorder loyalty cards",
                "description": "Update the display order of loyalty cards. Universal cards will always remain first.",
                "operationId": "reorderLoyaltyCards",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "card_orders"
                                ],
                                "properties": {
                                    "card_orders": {
                                        "description": "Array of card IDs with their new display order",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "description": "Card ID",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "display_order": {
                                                    "description": "New display order",
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cards reordered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cards reordered successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to reorder cards"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/members": {
            "get": {
                "tags": [
                    "Members"
                ],
                "summary": "Get list of members",
                "description": "Returns a paginated list of loyalty members with filtering options",
                "operationId": "getMembers",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "subscription_status",
                        "in": "query",
                        "description": "Filter by subscription status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "trial",
                                "expired",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "plan",
                        "in": "query",
                        "description": "Filter by subscription plan",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for name, email or phone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of members retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MemberResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/members/{id}": {
            "get": {
                "tags": [
                    "Members"
                ],
                "summary": "Get member details",
                "description": "Returns detailed information about a specific member",
                "operationId": "getMember",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Member details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MemberResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Member not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/members/{id}/status": {
            "put": {
                "tags": [
                    "Members"
                ],
                "summary": "Update member status",
                "description": "Update the active status of a member",
                "operationId": "updateMemberStatus",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "is_active"
                                ],
                                "properties": {
                                    "is_active": {
                                        "description": "Active status of the member",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Member status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Member status updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Member not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/members/{id}/subscription": {
            "put": {
                "tags": [
                    "Members"
                ],
                "summary": "Update member subscription",
                "description": "Update subscription details for a specific member",
                "operationId": "updateMemberSubscription",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "stripe_subscription_id": {
                                        "type": "string",
                                        "example": "sub_1234567890"
                                    },
                                    "limits": {
                                        "type": "object",
                                        "example": "{\"partner_cards\": 5, \"non_partner_cards\": 3}"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subscription updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Member subscription updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "subscription": {
                                                    "properties": {
                                                        "plan": {
                                                            "type": "string",
                                                            "example": "premium"
                                                        },
                                                        "status": {
                                                            "type": "string",
                                                            "example": "active"
                                                        },
                                                        "expires_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2023-12-31T23:59:59Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Member not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/members/sync": {
            "post": {
                "tags": [
                    "Members"
                ],
                "summary": "Sync members",
                "description": "Create Member records for users that don't have them yet",
                "operationId": "syncMembers",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Member synchronization completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Member synchronization completed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "synced": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "members_created": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/members/sync-to-odoo": {
            "post": {
                "tags": [
                    "Members"
                ],
                "summary": "Sync members to Odoo",
                "description": "Synchronize members data to Odoo as customers",
                "operationId": "syncMembersToOdoo",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "member_ids": {
                                        "description": "Array of member IDs to sync. If not provided, all members will be synced.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "sync_all": {
                                        "description": "Whether to sync all members",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Members synchronization completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Members synchronization to Odoo completed"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{locale}/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get user notifications",
                "description": "Returns a list of notifications for authenticated user",
                "operationId": "getUserNotifications",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "The locale",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter by type (info, promo, system, alert)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "read",
                        "in": "query",
                        "description": "Filter by read status (0 for unread, 1 for read)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "New offer available"
                                                    },
                                                    "body": {
                                                        "type": "string",
                                                        "example": "Check out our new offers with great discounts!"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "promo"
                                                    },
                                                    "read_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "metadata": {
                                                        "type": "object",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notifications retrieved successfully"
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 150
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Create a new notification",
                "description": "Creates a new notification for a user or all users",
                "operationId": "createNotification",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "The locale",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "body",
                                    "type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "New Offer Available"
                                    },
                                    "body": {
                                        "type": "string",
                                        "example": "Check out our new promotional offer with 50% discount!"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "info",
                                            "promo",
                                            "system",
                                            "alert"
                                        ],
                                        "example": "promo"
                                    },
                                    "user_id": {
                                        "description": "Specific user ID (null for all users)",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "metadata": {
                                        "description": "Additional data for the notification",
                                        "type": "object",
                                        "example": {
                                            "offer_id": 123,
                                            "discount": "50%"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Notification created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized to create notifications"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{locale}/notifications/unread-count": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get unread notification count",
                "description": "Returns the count of unread notifications for the authenticated user",
                "operationId": "getUnreadNotificationCount",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "The locale",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "count": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unread count retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{locale}/notifications/{id}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get notification details",
                "description": "Returns details for a specific notification",
                "operationId": "getNotification",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "The locale",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "New offer available"
                                                },
                                                "body": {
                                                    "type": "string",
                                                    "example": "Check out our new offers with great discounts!"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "promo"
                                                },
                                                "read_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "metadata": {
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized to view this notification"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete a notification",
                "description": "Deletes a specific notification",
                "operationId": "deleteNotification",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "The locale",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized to delete this notification"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{locale}/notifications/{id}/mark-as-read": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark notification as read",
                "description": "Marks a specific notification as read",
                "operationId": "markNotificationAsRead",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "The locale",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification marked as read"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized to update this notification"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{locale}/notifications/mark-all-as-read": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark all notifications as read",
                "description": "Marks all notifications as read for the authenticated user",
                "operationId": "markAllNotificationsAsRead",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "The locale",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All notifications marked as read"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{locale}/notifications/broadcast": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Broadcast notification to all users",
                "description": "Sends a notification to all users in the system",
                "operationId": "broadcastNotification",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "The locale",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "body",
                                    "type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "System Maintenance"
                                    },
                                    "body": {
                                        "type": "string",
                                        "example": "Our system will be under maintenance on Saturday."
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "info",
                                            "promo",
                                            "system",
                                            "alert"
                                        ],
                                        "example": "system"
                                    },
                                    "metadata": {
                                        "description": "Additional data for the notification",
                                        "type": "object",
                                        "example": {
                                            "maintenance_date": "2023-08-15"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Notifications broadcast successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "count": {
                                                    "type": "integer",
                                                    "example": 25
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notifications broadcast to all users"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized to broadcast notifications"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{locale}/user/notification-settings": {
            "get": {
                "tags": [
                    "Notification Settings"
                ],
                "summary": "Get user notification settings",
                "description": "Returns all notification settings for the authenticated user",
                "operationId": "getUserNotificationSettings",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "The locale",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "push": {
                                                    "type": "object",
                                                    "example": {
                                                        "push_offers": true,
                                                        "push_points": true
                                                    }
                                                },
                                                "email": {
                                                    "type": "object",
                                                    "example": {
                                                        "email_promotions": false,
                                                        "email_newsletter": true
                                                    }
                                                },
                                                "sms": {
                                                    "type": "object",
                                                    "example": {
                                                        "sms_offers": false,
                                                        "sms_reminders": false
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification settings retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Notification Settings"
                ],
                "summary": "Update user notification settings",
                "description": "Update notification settings for the authenticated user",
                "operationId": "updateUserNotificationSettings",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "The locale",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "settings": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "setting_key",
                                                "setting_type",
                                                "enabled"
                                            ],
                                            "properties": {
                                                "setting_key": {
                                                    "type": "string",
                                                    "example": "push_offers"
                                                },
                                                "setting_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "push",
                                                        "email",
                                                        "sms"
                                                    ],
                                                    "example": "push"
                                                },
                                                "enabled": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Settings updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "push": {
                                                    "type": "object",
                                                    "example": {
                                                        "push_offers": true,
                                                        "push_points": true
                                                    }
                                                },
                                                "email": {
                                                    "type": "object",
                                                    "example": {
                                                        "email_promotions": false,
                                                        "email_newsletter": true
                                                    }
                                                },
                                                "sms": {
                                                    "type": "object",
                                                    "example": {
                                                        "sms_offers": false,
                                                        "sms_reminders": false
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification settings updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{locale}/user/notification-settings/reset": {
            "post": {
                "tags": [
                    "Notification Settings"
                ],
                "summary": "Reset user notification settings",
                "description": "Reset notification settings to default values for the authenticated user",
                "operationId": "resetUserNotificationSettings",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "The locale",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Settings reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "push": {
                                                    "type": "object",
                                                    "example": {
                                                        "push_offers": true,
                                                        "push_points": true
                                                    }
                                                },
                                                "email": {
                                                    "type": "object",
                                                    "example": {
                                                        "email_promotions": false,
                                                        "email_newsletter": true
                                                    }
                                                },
                                                "sms": {
                                                    "type": "object",
                                                    "example": {
                                                        "sms_offers": false,
                                                        "sms_reminders": false
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification settings reset to defaults"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/offers": {
            "get": {
                "tags": [
                    "Offers"
                ],
                "summary": "List offers",
                "description": "Get a list of all active offers available to the user",
                "operationId": "listOffers",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "partner_id",
                        "in": "query",
                        "description": "Filter offers by partner ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "shop_id",
                        "in": "query",
                        "description": "Filter offers by shop ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter offers by category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "food"
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for offer title or description",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "discount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "partner_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "20% Off Your First Purchase"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Get 20% off your first purchase at any of our locations"
                                                    },
                                                    "terms_conditions": {
                                                        "type": "string",
                                                        "example": "Valid for new customers only. Cannot be combined with other offers."
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "food"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "discount"
                                                    },
                                                    "discount_value": {
                                                        "type": "number",
                                                        "example": 20
                                                    },
                                                    "discount_type": {
                                                        "type": "string",
                                                        "example": "percentage"
                                                    },
                                                    "image_path": {
                                                        "type": "string",
                                                        "example": "offers/abc123.jpg"
                                                    },
                                                    "image_url": {
                                                        "type": "string",
                                                        "example": "https://example.com/storage/offers/abc123.jpg"
                                                    },
                                                    "valid_from": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-01-01T00:00:00Z"
                                                    },
                                                    "valid_until": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-12-31T23:59:59Z"
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "points_required": {
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-01-01T10:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-01-01T10:00:00Z"
                                                    },
                                                    "partner": {
                                                        "type": "object"
                                                    },
                                                    "shops": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Offers"
                ],
                "summary": "Create offer",
                "description": "Create a new offer for a partner",
                "operationId": "createOffer",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "partner_id",
                                    "title",
                                    "description",
                                    "type",
                                    "valid_from"
                                ],
                                "properties": {
                                    "partner_id": {
                                        "description": "Partner ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "description": "Offer title",
                                        "type": "string",
                                        "example": "20% Off Your First Purchase"
                                    },
                                    "description": {
                                        "description": "Offer description",
                                        "type": "string",
                                        "example": "Get 20% off your first purchase at any of our locations"
                                    },
                                    "terms_conditions": {
                                        "description": "Terms and conditions",
                                        "type": "string",
                                        "example": "Valid for new customers only. Cannot be combined with other offers."
                                    },
                                    "category": {
                                        "description": "Offer category",
                                        "type": "string",
                                        "example": "food"
                                    },
                                    "type": {
                                        "description": "Offer type",
                                        "type": "string",
                                        "enum": [
                                            "discount",
                                            "freebie",
                                            "coupon"
                                        ],
                                        "example": "discount"
                                    },
                                    "discount_value": {
                                        "description": "Discount value (percentage or fixed amount)",
                                        "type": "number",
                                        "example": 20
                                    },
                                    "discount_type": {
                                        "description": "Discount type",
                                        "type": "string",
                                        "enum": [
                                            "percentage",
                                            "fixed_amount"
                                        ],
                                        "example": "percentage"
                                    },
                                    "image": {
                                        "description": "Offer image file (JPG, PNG)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "valid_from": {
                                        "description": "Offer start date (Y-m-d)",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-01-01"
                                    },
                                    "valid_until": {
                                        "description": "Offer end date (Y-m-d)",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-31"
                                    },
                                    "shops": {
                                        "description": "Shop IDs for which this offer is available. If empty, applies globally to all partner shops",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "is_active": {
                                        "description": "Whether the offer is active",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "points_required": {
                                        "description": "Points required to redeem the offer",
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "max_coupons": {
                                        "description": "Maximum number of coupons that can be created. Null means unlimited.",
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Offer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Offer created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "partner_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "20% Off Your First Purchase"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Get 20% off your first purchase at any of our locations"
                                                },
                                                "terms_conditions": {
                                                    "type": "string",
                                                    "example": "Valid for new customers only. Cannot be combined with other offers."
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "food"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "discount"
                                                },
                                                "discount_value": {
                                                    "type": "number",
                                                    "example": 20
                                                },
                                                "discount_type": {
                                                    "type": "string",
                                                    "example": "percentage"
                                                },
                                                "image_path": {
                                                    "type": "string",
                                                    "example": "offers/abc123.jpg"
                                                },
                                                "image_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/storage/offers/abc123.jpg"
                                                },
                                                "valid_from": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00Z"
                                                },
                                                "valid_until": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-12-31T23:59:59Z"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "points_required": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "max_coupons": {
                                                    "description": "Maximum number of coupons that can be created. Null means unlimited.",
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T10:00:00Z"
                                                },
                                                "partner": {
                                                    "type": "object"
                                                },
                                                "shops": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to create offers"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/offers/{id}": {
            "get": {
                "tags": [
                    "Offers"
                ],
                "summary": "Get offer details",
                "description": "Get details of a specific offer",
                "operationId": "getOffer",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Offer ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "partner_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "20% Off Your First Purchase"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Get 20% off your first purchase at any of our locations"
                                                },
                                                "terms_conditions": {
                                                    "type": "string",
                                                    "example": "Valid for new customers only. Cannot be combined with other offers."
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "food"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "discount"
                                                },
                                                "discount_value": {
                                                    "type": "number",
                                                    "example": 20
                                                },
                                                "discount_type": {
                                                    "type": "string",
                                                    "example": "percentage"
                                                },
                                                "image_path": {
                                                    "type": "string",
                                                    "example": "offers/abc123.jpg"
                                                },
                                                "image_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/storage/offers/abc123.jpg"
                                                },
                                                "valid_from": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00Z"
                                                },
                                                "valid_until": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-12-31T23:59:59Z"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "points_required": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T10:00:00Z"
                                                },
                                                "partner": {
                                                    "type": "object"
                                                },
                                                "shops": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Offer not found"
                    },
                    "403": {
                        "description": "Forbidden - No permission to view this offer"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Offers"
                ],
                "summary": "Update offer",
                "description": "Update an existing offer",
                "operationId": "updateOffer",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Offer ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Offer title",
                                        "type": "string",
                                        "example": "20% Off Your First Purchase"
                                    },
                                    "description": {
                                        "description": "Offer description",
                                        "type": "string",
                                        "example": "Get 20% off your first purchase at any of our locations"
                                    },
                                    "terms_conditions": {
                                        "description": "Terms and conditions",
                                        "type": "string",
                                        "example": "Valid for new customers only. Cannot be combined with other offers."
                                    },
                                    "category": {
                                        "description": "Offer category",
                                        "type": "string",
                                        "example": "food"
                                    },
                                    "type": {
                                        "description": "Offer type",
                                        "type": "string",
                                        "enum": [
                                            "discount",
                                            "freebie",
                                            "coupon"
                                        ],
                                        "example": "discount"
                                    },
                                    "discount_value": {
                                        "description": "Discount value (percentage or fixed amount)",
                                        "type": "number",
                                        "example": 20
                                    },
                                    "discount_type": {
                                        "description": "Discount type",
                                        "type": "string",
                                        "enum": [
                                            "percentage",
                                            "fixed_amount"
                                        ],
                                        "example": "percentage"
                                    },
                                    "image": {
                                        "description": "Offer image file (JPG, PNG)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "valid_from": {
                                        "description": "Offer start date (Y-m-d)",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-01-01"
                                    },
                                    "valid_until": {
                                        "description": "Offer end date (Y-m-d)",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-31"
                                    },
                                    "shops": {
                                        "description": "Shop IDs for which this offer is available. If empty, applies globally to all partner shops",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "is_active": {
                                        "description": "Whether the offer is active",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "points_required": {
                                        "description": "Points required to redeem the offer",
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "max_coupons": {
                                        "description": "Maximum number of coupons that can be created. Null means unlimited.",
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Offer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Offer updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "partner_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "20% Off Your First Purchase"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Get 20% off your first purchase at any of our locations"
                                                },
                                                "terms_conditions": {
                                                    "type": "string",
                                                    "example": "Valid for new customers only. Cannot be combined with other offers."
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "food"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "discount"
                                                },
                                                "discount_value": {
                                                    "type": "number",
                                                    "example": 20
                                                },
                                                "discount_type": {
                                                    "type": "string",
                                                    "example": "percentage"
                                                },
                                                "image_path": {
                                                    "type": "string",
                                                    "example": "offers/abc123.jpg"
                                                },
                                                "image_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/storage/offers/abc123.jpg"
                                                },
                                                "valid_from": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00Z"
                                                },
                                                "valid_until": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-12-31T23:59:59Z"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-02T10:00:00Z"
                                                },
                                                "shops": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to update this offer"
                    },
                    "404": {
                        "description": "Offer not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Offers"
                ],
                "summary": "Delete offer",
                "description": "Delete an offer (soft delete)",
                "operationId": "deleteOffer",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Offer ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Offer deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Offer deleted successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to delete this offer"
                    },
                    "404": {
                        "description": "Offer not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/offers/categories": {
            "get": {
                "tags": [
                    "Offers"
                ],
                "summary": "Get offer categories",
                "description": "Get list of available offer categories",
                "operationId": "getOfferCategories",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "food"
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/onboarding/submit": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Submit partner onboarding application",
                "description": "Submit a new partner onboarding application with company and contact details",
                "operationId": "submitOnboarding",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "company_name",
                                    "contact_name",
                                    "contact_email",
                                    "contact_phone",
                                    "business_type"
                                ],
                                "properties": {
                                    "company_name": {
                                        "description": "Company name",
                                        "type": "string",
                                        "example": "Acme Corp"
                                    },
                                    "company_code": {
                                        "description": "Company registration code",
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "vat_number": {
                                        "description": "VAT number",
                                        "type": "string",
                                        "example": "LT123456789"
                                    },
                                    "contact_name": {
                                        "description": "Contact person name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_email": {
                                        "description": "Contact email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@acme.com"
                                    },
                                    "contact_phone": {
                                        "description": "Contact phone",
                                        "type": "string",
                                        "example": "+37061234567"
                                    },
                                    "business_type": {
                                        "description": "Type of business",
                                        "type": "string",
                                        "example": "retail"
                                    },
                                    "street_address": {
                                        "description": "Street address",
                                        "type": "string",
                                        "example": "Main St 123"
                                    },
                                    "city": {
                                        "description": "City",
                                        "type": "string",
                                        "example": "Vilnius"
                                    },
                                    "postal_code": {
                                        "description": "Postal code",
                                        "type": "string",
                                        "example": "01234"
                                    },
                                    "country": {
                                        "description": "Country",
                                        "type": "string",
                                        "example": "Lithuania"
                                    },
                                    "website": {
                                        "description": "Company website",
                                        "type": "string",
                                        "example": "https://acme.com"
                                    },
                                    "employees_count": {
                                        "description": "Number of employees",
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "annual_revenue": {
                                        "description": "Annual revenue range",
                                        "type": "string",
                                        "example": "100000-500000"
                                    },
                                    "customer_base": {
                                        "description": "Customer base size",
                                        "type": "string",
                                        "example": "1000-5000"
                                    },
                                    "pos_system": {
                                        "description": "Current POS system",
                                        "type": "string",
                                        "example": "Square"
                                    },
                                    "marketing_channels": {
                                        "description": "Marketing channels used",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "social_media",
                                            "email"
                                        ]
                                    },
                                    "goals": {
                                        "description": "Business goals",
                                        "type": "string",
                                        "example": "Increase customer retention"
                                    },
                                    "referral_source": {
                                        "description": "How they found us",
                                        "type": "string",
                                        "example": "Google search"
                                    },
                                    "additional_info": {
                                        "description": "Additional information",
                                        "type": "string",
                                        "example": "Looking for loyalty program"
                                    },
                                    "agree_terms": {
                                        "description": "Agreement to terms and conditions",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "agree_privacy": {
                                        "description": "Agreement to privacy policy",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "newsletter_consent": {
                                        "description": "Newsletter subscription consent",
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Onboarding application submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Application submitted successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "tracking_code": {
                                                    "type": "string",
                                                    "example": "ACME-2024-001"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending_review"
                                                },
                                                "estimated_review_time": {
                                                    "type": "string",
                                                    "example": "2-3 business days"
                                                },
                                                "next_steps": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/{locale}/onboarding/status/{trackingCode}": {
            "get": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Get onboarding application status",
                "description": "Check the status of an onboarding application using tracking code",
                "operationId": "getOnboardingStatus",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "trackingCode",
                        "in": "path",
                        "description": "Application tracking code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ACME-2024-001"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "tracking_code": {
                                                    "type": "string",
                                                    "example": "ACME-2024-001"
                                                },
                                                "company_name": {
                                                    "type": "string",
                                                    "example": "Acme Corp"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending_review"
                                                },
                                                "status_description": {
                                                    "type": "string",
                                                    "example": "Your application is under review"
                                                },
                                                "submitted_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "last_updated": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "estimated_review_date": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "next_steps": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "timeline": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "contact_info": {
                                                    "type": "object"
                                                },
                                                "documents_required": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Application not found"
                    }
                }
            }
        },
        "/{locale}/onboarding/{trackingCode}/messages": {
            "get": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Get partner messages",
                "description": "Get all messages for a partner application",
                "operationId": "getOnboardingPartnerMessages",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "trackingCode",
                        "in": "path",
                        "description": "Application tracking code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ACME-2024-001"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Send partner message",
                "description": "Send a message from partner to admin",
                "operationId": "sendOnboardingPartnerMessage",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "trackingCode",
                        "in": "path",
                        "description": "Application tracking code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ACME-2024-001"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "subject": {
                                        "type": "string",
                                        "example": "Question about my application"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "I have a question..."
                                    },
                                    "attachments[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Message sent successfully"
                    }
                }
            }
        },
        "/{locale}/partners": {
            "get": {
                "tags": [
                    "Partners"
                ],
                "summary": "List partners",
                "description": "Get a list of all partners in the platform",
                "operationId": "listPartners",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for partner name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Restaurant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Acme Restaurants"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "A chain of fine dining restaurants"
                                                    },
                                                    "contact_email": {
                                                        "type": "string",
                                                        "example": "contact@acmerestaurants.com"
                                                    },
                                                    "contact_phone": {
                                                        "type": "string",
                                                        "example": "+12345678901"
                                                    },
                                                    "website": {
                                                        "type": "string",
                                                        "example": "https://acmerestaurants.com"
                                                    },
                                                    "logo_url": {
                                                        "type": "string",
                                                        "example": "https://acmerestaurants.com/logo.png"
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-01-01T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-01-01T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 150
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Partners"
                ],
                "summary": "Create partner",
                "description": "Create a new partner",
                "operationId": "createPartner",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "contact_email"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Partner name",
                                        "type": "string",
                                        "example": "Acme Restaurants"
                                    },
                                    "description": {
                                        "description": "Partner description",
                                        "type": "string",
                                        "example": "A chain of fine dining restaurants"
                                    },
                                    "contact_email": {
                                        "description": "Partner contact email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "contact@acmerestaurants.com"
                                    },
                                    "contact_phone": {
                                        "description": "Partner contact phone",
                                        "type": "string",
                                        "example": "+12345678901"
                                    },
                                    "website": {
                                        "description": "Partner website URL",
                                        "type": "string",
                                        "example": "https://acmerestaurants.com"
                                    },
                                    "logo_url": {
                                        "description": "URL to partner logo",
                                        "type": "string",
                                        "example": "https://acmerestaurants.com/logo.png"
                                    },
                                    "is_active": {
                                        "description": "Whether the partner is active",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Partner created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Partner created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Acme Restaurants"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A chain of fine dining restaurants"
                                                },
                                                "contact_email": {
                                                    "type": "string",
                                                    "example": "contact@acmerestaurants.com"
                                                },
                                                "contact_phone": {
                                                    "type": "string",
                                                    "example": "+12345678901"
                                                },
                                                "website": {
                                                    "type": "string",
                                                    "example": "https://acmerestaurants.com"
                                                },
                                                "logo_url": {
                                                    "type": "string",
                                                    "example": "https://acmerestaurants.com/logo.png"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/partners/{id}": {
            "get": {
                "tags": [
                    "Partners"
                ],
                "summary": "Get partner details",
                "description": "Get details of a specific partner",
                "operationId": "getPartner",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Acme Restaurants"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A chain of fine dining restaurants"
                                                },
                                                "contact_email": {
                                                    "type": "string",
                                                    "example": "contact@acmerestaurants.com"
                                                },
                                                "contact_phone": {
                                                    "type": "string",
                                                    "example": "+12345678901"
                                                },
                                                "website": {
                                                    "type": "string",
                                                    "example": "https://acmerestaurants.com"
                                                },
                                                "logo_url": {
                                                    "type": "string",
                                                    "example": "https://acmerestaurants.com/logo.png"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Partner not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Partners"
                ],
                "summary": "Update partner",
                "description": "Update a partner's information",
                "operationId": "updatePartner",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Partner name",
                                        "type": "string",
                                        "example": "Acme Restaurants Updated"
                                    },
                                    "description": {
                                        "description": "Partner description",
                                        "type": "string",
                                        "example": "An updated chain of fine dining restaurants"
                                    },
                                    "contact_email": {
                                        "description": "Partner contact email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "newcontact@acmerestaurants.com"
                                    },
                                    "contact_phone": {
                                        "description": "Partner contact phone",
                                        "type": "string",
                                        "example": "+12345678902"
                                    },
                                    "website": {
                                        "description": "Partner website URL",
                                        "type": "string",
                                        "example": "https://acmerestaurants-updated.com"
                                    },
                                    "logo_url": {
                                        "description": "URL to partner logo",
                                        "type": "string",
                                        "example": "https://acmerestaurants.com/new-logo.png"
                                    },
                                    "is_active": {
                                        "description": "Whether the partner is active",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Partner updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Partner updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Acme Restaurants Updated"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "An updated chain of fine dining restaurants"
                                                },
                                                "contact_email": {
                                                    "type": "string",
                                                    "example": "newcontact@acmerestaurants.com"
                                                },
                                                "contact_phone": {
                                                    "type": "string",
                                                    "example": "+12345678902"
                                                },
                                                "website": {
                                                    "type": "string",
                                                    "example": "https://acmerestaurants-updated.com"
                                                },
                                                "logo_url": {
                                                    "type": "string",
                                                    "example": "https://acmerestaurants.com/new-logo.png"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Partner not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Partners"
                ],
                "summary": "Delete partner",
                "description": "Deactivate a partner instead of completely removing it",
                "operationId": "deletePartner",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Partner ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner deactivated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Partner deactivated successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Partner not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/partners/customers": {
            "get": {
                "tags": [
                    "Partners"
                ],
                "summary": "Get all customers",
                "description": "Retrieve a list of customers for the partner",
                "operationId": "getCustomers",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "format": "email",
                                                        "example": "user@example.com"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "+37061234567"
                                                    },
                                                    "member_since": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2023-01-01"
                                                    },
                                                    "total_purchases": {
                                                        "type": "integer",
                                                        "example": 12
                                                    },
                                                    "total_points": {
                                                        "type": "integer",
                                                        "example": 1250
                                                    },
                                                    "loyalty_level": {
                                                        "type": "string",
                                                        "example": "Gold"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 75
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/partners/customers/{id}": {
            "get": {
                "tags": [
                    "Partners"
                ],
                "summary": "Get customer details",
                "description": "Retrieve detailed information about a specific customer",
                "operationId": "getCustomerDetails",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "user@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+37061234567"
                                                },
                                                "member_since": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-01-01"
                                                },
                                                "total_purchases": {
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "total_points": {
                                                    "type": "integer",
                                                    "example": 1250
                                                },
                                                "loyalty_level": {
                                                    "type": "string",
                                                    "example": "Gold"
                                                },
                                                "transaction_history": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 123
                                                            },
                                                            "date": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2023-05-15T14:30:00Z"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 125.5
                                                            },
                                                            "points_earned": {
                                                                "type": "integer",
                                                                "example": 125
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "completed"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/{locale}/footer": {
            "get": {
                "tags": [
                    "Footer"
                ],
                "summary": "Get footer data",
                "description": "Returns all footer-related data including company info, contact details, and social links",
                "operationId": "getFooterData",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Language locale (lt, en)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "lt",
                                "en"
                            ],
                            "example": "lt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Footer data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Footer data retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "company_info": {
                                                    "properties": {
                                                        "legal_name": {
                                                            "type": "string",
                                                            "example": "Loyalty LT, MB"
                                                        },
                                                        "company_code": {
                                                            "type": "string",
                                                            "example": "307165534"
                                                        },
                                                        "vat_code": {
                                                            "type": "string",
                                                            "example": "LT307165534"
                                                        },
                                                        "address": {
                                                            "type": "string",
                                                            "example": "Chemijos g. 27C-62, LT-51332 Kaunas"
                                                        },
                                                        "app_name": {
                                                            "type": "string",
                                                            "example": "Loyalty.lt"
                                                        },
                                                        "logo_light_url": {
                                                            "type": "string",
                                                            "example": "/logo-light.png"
                                                        },
                                                        "logo_dark_url": {
                                                            "type": "string",
                                                            "example": "/logo-dark.png"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "contact_info": {
                                                    "properties": {
                                                        "support_email": {
                                                            "type": "string",
                                                            "example": "gvidas@loyalty.lt"
                                                        },
                                                        "support_phone": {
                                                            "type": "string",
                                                            "example": "+370 600 00000"
                                                        },
                                                        "business_hours": {
                                                            "type": "string",
                                                            "example": "09:00-22:00 (kasdien)"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "social_links": {
                                                    "properties": {
                                                        "facebook": {
                                                            "type": "string",
                                                            "example": "https://www.facebook.com/loyaltyltapp"
                                                        },
                                                        "instagram": {
                                                            "type": "string",
                                                            "example": "https://instagram.com/loyaltyltapp"
                                                        },
                                                        "tiktok": {
                                                            "type": "string",
                                                            "example": "https://www.tiktok.com/@loyaltyltapp"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "navigation_links": {
                                                    "properties": {
                                                        "main_website": {
                                                            "type": "string",
                                                            "example": "https://loyalty.lt"
                                                        },
                                                        "privacy_policy": {
                                                            "type": "string"
                                                        },
                                                        "terms_of_service": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "slogan": {
                                                    "type": "string",
                                                    "example": "Visos lojalumo kortelės Jūsų rankoje!"
                                                },
                                                "copyright": {
                                                    "type": "string",
                                                    "example": "© 2025 Loyalty.lt. Visos teisės saugomos."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/partners/games": {
            "get": {
                "tags": [
                    "Partner Games"
                ],
                "summary": "List all partner games",
                "operationId": "5cedd2f368073b72e13c015d7e87225d",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "active_only",
                        "in": "query",
                        "description": "Filter only active games",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of partner games"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Partner Games"
                ],
                "summary": "Create a new game",
                "operationId": "ab457511029a42b022a60b0f9a637b10",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Wheel of Fortune"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Spin the wheel to win prizes"
                                    },
                                    "game_type": {
                                        "type": "string",
                                        "example": "wheel"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-01-01T00:00:00Z"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-12-31T23:59:59Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Game created successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/partners/games/{id}": {
            "get": {
                "tags": [
                    "Partner Games"
                ],
                "summary": "Get a specific game",
                "operationId": "8daaa12ad2687dfa27bc41adc87249ae",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game details with stats"
                    },
                    "404": {
                        "description": "Game not found or not owned by the partner"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Partner Games"
                ],
                "summary": "Update a game",
                "operationId": "a8e76b902b5826752c25c4635839fc43",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Game Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated game description"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-01-15T00:00:00Z"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-12-15T23:59:59Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Game updated successfully"
                    },
                    "404": {
                        "description": "Game not found or not owned by the partner"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Partner Games"
                ],
                "summary": "Delete a game",
                "operationId": "69956fa446bef169cf96a4bd094da423",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game deleted successfully"
                    },
                    "404": {
                        "description": "Game not found or not owned by the partner"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/partners/games/{id}/toggle-status": {
            "put": {
                "tags": [
                    "Partner Games"
                ],
                "summary": "Toggle game active status",
                "operationId": "d2d168c04c8cdb51ea63f0ab922093a3",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game status toggled successfully"
                    },
                    "404": {
                        "description": "Game not found or not owned by the partner"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/partners/games/{id}/statistics": {
            "get": {
                "tags": [
                    "Partner Games"
                ],
                "summary": "Get game statistics",
                "operationId": "73c511d44d4bd8533a506e72f925334a",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Statistics period (day, week, month, year)",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "day",
                                "week",
                                "month",
                                "year"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game statistics"
                    },
                    "404": {
                        "description": "Game not found or not owned by the partner"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/partners/games/{id}/upload-stamp-image": {
            "post": {
                "tags": [
                    "Partner Games"
                ],
                "summary": "Upload a custom stamp image",
                "operationId": "69d13bc0fc358015ac63b9021c4a9529",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "image_base64": {
                                        "description": "Base64 encoded image data",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image uploaded successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/partners/games/{id}/collection-items": {
            "get": {
                "tags": [
                    "Partner Games"
                ],
                "summary": "Get collection game items",
                "operationId": "99617b82223bc3e8c94cfef8ca6936c9",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collection items for the game"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/partners/games/{id}/stamps": {
            "get": {
                "tags": [
                    "Partner Games"
                ],
                "summary": "Get stamp card settings for a game",
                "operationId": "c3eac3202e289604811f68d88fa80c25",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stamp card settings for the game"
                    },
                    "404": {
                        "description": "Game not found or not owned by the partner"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/partners/transactions": {
            "get": {
                "tags": [
                    "Partners"
                ],
                "summary": "Get partner transactions",
                "description": "Retrieve a list of transactions for the partner",
                "operationId": "getPartnerTransactions",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "shop_id",
                        "in": "query",
                        "description": "Shop ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "staff_id",
                        "in": "query",
                        "description": "Staff ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Transaction status",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-05-15T14:30:00Z"
                                                    },
                                                    "customer_name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "customer_id": {
                                                        "type": "integer",
                                                        "example": 123
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 125.5
                                                    },
                                                    "points_awarded": {
                                                        "type": "integer",
                                                        "example": 125
                                                    },
                                                    "points_redeemed": {
                                                        "type": "integer",
                                                        "example": 125
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "completed"
                                                    },
                                                    "shop_name": {
                                                        "type": "string",
                                                        "example": "Shop 1"
                                                    },
                                                    "shop_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "staff_name": {
                                                        "type": "string",
                                                        "example": "Staff 1"
                                                    },
                                                    "staff_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "sale"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 75
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/partners/transactions/{id}": {
            "get": {
                "tags": [
                    "Partners"
                ],
                "summary": "Get transaction details",
                "description": "Retrieve detailed information about a specific transaction",
                "operationId": "getTransactionDetails",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-05-15T14:30:00Z"
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 125.5
                                                },
                                                "points_earned": {
                                                    "type": "integer",
                                                    "example": 125
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "customer": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 123
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+37061234567"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Product 1"
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 25.99
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "shop": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Shop 1"
                                                        },
                                                        "address": {
                                                            "type": "string",
                                                            "example": "Shop Address"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+37061234567"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "shop@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "staff": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Staff 1"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "staff@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "receipt": {
                                                    "properties": {
                                                        "url": {
                                                            "type": "string",
                                                            "example": "https://example.com/receipt.pdf"
                                                        },
                                                        "path": {
                                                            "type": "string",
                                                            "example": "/receipts/receipt.pdf"
                                                        },
                                                        "available": {
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "points_calculation": {
                                                    "type": "string",
                                                    "example": "Points calculation details"
                                                },
                                                "points_discount_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10.99
                                                },
                                                "uploaded_by_staff_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/points": {
            "get": {
                "tags": [
                    "Points"
                ],
                "summary": "List points transactions",
                "description": "Get a list of points transactions for a loyalty card",
                "operationId": "listPointsTransactions",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "card_id",
                        "in": "query",
                        "description": "Filter by loyalty card ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "shop_id",
                        "in": "query",
                        "description": "Filter by shop ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "transaction_type",
                        "in": "query",
                        "description": "Filter by transaction type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "earned",
                                "spent",
                                "expired"
                            ],
                            "example": "earned"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter from date (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-01"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter to date (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-12-31"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "loyalty_card_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "shop_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "points": {
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "transaction_type": {
                                                        "type": "string",
                                                        "example": "earned"
                                                    },
                                                    "reference": {
                                                        "type": "string",
                                                        "example": "Purchase #123"
                                                    },
                                                    "expires_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-01-01T00:00:00Z"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-06-01T10:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-06-01T10:00:00Z"
                                                    },
                                                    "loyalty_card": {
                                                        "type": "object"
                                                    },
                                                    "shop": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 75
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Loyalty card not found"
                    },
                    "403": {
                        "description": "Forbidden - No permission to view these points"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Points"
                ],
                "summary": "Create points transaction",
                "description": "Add points to a loyalty card",
                "operationId": "addPoints",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "loyalty_card_id",
                                    "shop_id",
                                    "points",
                                    "transaction_type"
                                ],
                                "properties": {
                                    "loyalty_card_id": {
                                        "description": "Loyalty card ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "shop_id": {
                                        "description": "Shop ID where points were earned",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "points": {
                                        "description": "Number of points to add",
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "transaction_type": {
                                        "description": "Transaction type",
                                        "type": "string",
                                        "enum": [
                                            "earned",
                                            "spent",
                                            "expired"
                                        ],
                                        "example": "earned"
                                    },
                                    "reference": {
                                        "description": "Reference for the transaction",
                                        "type": "string",
                                        "example": "Purchase #123"
                                    },
                                    "expires_at": {
                                        "description": "When points expire",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Points transaction created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Points added successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "loyalty_card_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "shop_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "points": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "transaction_type": {
                                                    "type": "string",
                                                    "example": "earned"
                                                },
                                                "reference": {
                                                    "type": "string",
                                                    "example": "Purchase #123"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T00:00:00Z"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to add points"
                    },
                    "404": {
                        "description": "Loyalty card or shop not found"
                    },
                    "422": {
                        "description": "Validation error or insufficient points balance"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/points/{id}": {
            "get": {
                "tags": [
                    "Points"
                ],
                "summary": "Get points transaction details",
                "description": "Get details of a specific points transaction",
                "operationId": "getPointsTransaction",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Points transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "loyalty_card_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "shop_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "points": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "transaction_type": {
                                                    "type": "string",
                                                    "example": "earned"
                                                },
                                                "reference": {
                                                    "type": "string",
                                                    "example": "Purchase #123"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T00:00:00Z"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                },
                                                "loyalty_card": {
                                                    "type": "object"
                                                },
                                                "shop": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Points transaction not found"
                    },
                    "403": {
                        "description": "Forbidden - No permission to view this transaction"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/loyalty-cards/{cardId}/balance": {
            "get": {
                "tags": [
                    "Points"
                ],
                "summary": "Get card points balance",
                "description": "Get the current points balance for a loyalty card",
                "operationId": "getPointsBalance",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "cardId",
                        "in": "path",
                        "description": "Loyalty card ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "card_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "card_number": {
                                                    "type": "string",
                                                    "example": "LC00000001"
                                                },
                                                "balance": {
                                                    "type": "integer",
                                                    "example": 250
                                                },
                                                "earned": {
                                                    "type": "integer",
                                                    "example": 350
                                                },
                                                "spent": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "expired": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "expiring_soon": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "next_expiry_date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Loyalty card not found"
                    },
                    "403": {
                        "description": "Forbidden - No permission to view this card's balance"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/points/process-expired": {
            "post": {
                "tags": [
                    "Points"
                ],
                "summary": "Process expired points",
                "description": "Mark expired points as expired (admin only)",
                "operationId": "processExpiredPoints",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processing completed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Expired points processed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "expired_count": {
                                                    "type": "integer",
                                                    "example": 120
                                                },
                                                "total_points_expired": {
                                                    "type": "integer",
                                                    "example": 5000
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to process expired points"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/pricing-rules": {
            "get": {
                "tags": [
                    "Pricing Rules"
                ],
                "summary": "List pricing rules",
                "description": "Returns a list of pricing rules, optionally filtered by partner_id",
                "operationId": "listPricingRules",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "partner_id",
                        "in": "query",
                        "description": "Filter by partner ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "rule_type",
                        "in": "query",
                        "description": "Filter by rule type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "subscription",
                                "active_user_fee",
                                "api_request_fee"
                            ],
                            "example": "subscription"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "partner_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "rule_type": {
                                                                "type": "string",
                                                                "example": "subscription"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Monthly subscription fee"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 29.99
                                                            },
                                                            "is_active": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "frequency": {
                                                                "type": "string",
                                                                "example": "monthly"
                                                            },
                                                            "calculation_type": {
                                                                "type": "string",
                                                                "example": "flat"
                                                            },
                                                            "min_value": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "max_value": {
                                                                "type": "integer",
                                                                "example": 1000
                                                            },
                                                            "valid_from": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2023-01-01"
                                                            },
                                                            "valid_until": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2023-12-31"
                                                            },
                                                            "billing_start_date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2023-01-01"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2023-01-01T12:00:00Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2023-01-01T12:00:00Z"
                                                            },
                                                            "partner": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Acme Corp"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "example": "http://example.com/api/en/pricing-rules?page=1"
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "example": "http://example.com/api/en/pricing-rules?page=1"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://example.com/api/en/pricing-rules"
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Pricing Rules"
                ],
                "summary": "Create pricing rule",
                "description": "Store a newly created pricing rule",
                "operationId": "createPricingRule",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "partner_id",
                                    "rule_type",
                                    "description",
                                    "amount"
                                ],
                                "properties": {
                                    "partner_id": {
                                        "description": "The ID of the partner",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "rule_type": {
                                        "description": "The type of pricing rule",
                                        "type": "string",
                                        "enum": [
                                            "subscription",
                                            "active_user_fee",
                                            "api_request_fee"
                                        ],
                                        "example": "subscription"
                                    },
                                    "description": {
                                        "description": "Description of the pricing rule",
                                        "type": "string",
                                        "example": "Monthly subscription fee"
                                    },
                                    "amount": {
                                        "description": "The amount for the rule",
                                        "type": "number",
                                        "format": "float",
                                        "example": 29.99
                                    },
                                    "is_active": {
                                        "description": "Is the rule active",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "frequency": {
                                        "description": "Billing frequency",
                                        "type": "string",
                                        "enum": [
                                            "monthly",
                                            "quarterly",
                                            "yearly"
                                        ],
                                        "example": "monthly"
                                    },
                                    "calculation_type": {
                                        "description": "How the fee is calculated",
                                        "type": "string",
                                        "enum": [
                                            "per_unit",
                                            "flat",
                                            "tiered"
                                        ],
                                        "example": "flat"
                                    },
                                    "min_value": {
                                        "description": "Minimum value for the rule to apply",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "max_value": {
                                        "description": "Maximum value for the rule to apply",
                                        "type": "integer",
                                        "example": 1000
                                    },
                                    "valid_from": {
                                        "description": "Starting date for the rule",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-01-01"
                                    },
                                    "valid_until": {
                                        "description": "Ending date for the rule",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-31"
                                    },
                                    "billing_start_date": {
                                        "description": "When billing should start",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pricing rule created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pricing rule created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "partner_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "rule_type": {
                                                    "type": "string",
                                                    "example": "subscription"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Monthly subscription fee"
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 29.99
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "frequency": {
                                                    "type": "string",
                                                    "example": "monthly"
                                                },
                                                "calculation_type": {
                                                    "type": "string",
                                                    "example": "flat"
                                                },
                                                "min_value": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "max_value": {
                                                    "type": "integer",
                                                    "example": 1000
                                                },
                                                "valid_from": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-01-01"
                                                },
                                                "valid_until": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-12-31"
                                                },
                                                "billing_start_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-01-01"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/pricing-rules/{id}": {
            "get": {
                "tags": [
                    "Pricing Rules"
                ],
                "summary": "Get pricing rule details",
                "description": "Get details of a specific pricing rule",
                "operationId": "getPricingRule",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Pricing rule ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pricing rule details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "partner_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "rule_type": {
                                                    "type": "string",
                                                    "example": "subscription"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Monthly subscription fee"
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 29.99
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "frequency": {
                                                    "type": "string",
                                                    "example": "monthly"
                                                },
                                                "calculation_type": {
                                                    "type": "string",
                                                    "example": "flat"
                                                },
                                                "min_value": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "max_value": {
                                                    "type": "integer",
                                                    "example": 1000
                                                },
                                                "valid_from": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-01-01"
                                                },
                                                "valid_until": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-12-31"
                                                },
                                                "billing_start_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-01-01"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Pricing rule not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Pricing Rules"
                ],
                "summary": "Update pricing rule",
                "description": "Update an existing pricing rule",
                "operationId": "updatePricingRule",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Pricing rule ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "partner_id": {
                                        "description": "The ID of the partner",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "rule_type": {
                                        "description": "The type of pricing rule",
                                        "type": "string",
                                        "enum": [
                                            "subscription",
                                            "active_user_fee",
                                            "api_request_fee"
                                        ],
                                        "example": "subscription"
                                    },
                                    "description": {
                                        "description": "Description of the pricing rule",
                                        "type": "string",
                                        "example": "Monthly subscription fee"
                                    },
                                    "amount": {
                                        "description": "The amount for the rule",
                                        "type": "number",
                                        "format": "float",
                                        "example": 29.99
                                    },
                                    "is_active": {
                                        "description": "Is the rule active",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "frequency": {
                                        "description": "Billing frequency",
                                        "type": "string",
                                        "enum": [
                                            "monthly",
                                            "quarterly",
                                            "yearly"
                                        ],
                                        "example": "monthly"
                                    },
                                    "calculation_type": {
                                        "description": "How the fee is calculated",
                                        "type": "string",
                                        "enum": [
                                            "per_unit",
                                            "flat",
                                            "tiered"
                                        ],
                                        "example": "flat"
                                    },
                                    "min_value": {
                                        "description": "Minimum value for the rule to apply",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "max_value": {
                                        "description": "Maximum value for the rule to apply",
                                        "type": "integer",
                                        "example": 1000
                                    },
                                    "valid_from": {
                                        "description": "Starting date for the rule",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-01-01"
                                    },
                                    "valid_until": {
                                        "description": "Ending date for the rule",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-31"
                                    },
                                    "billing_start_date": {
                                        "description": "When billing should start",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pricing rule updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pricing rule updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "partner_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "rule_type": {
                                                    "type": "string",
                                                    "example": "subscription"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Monthly subscription fee"
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 29.99
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "frequency": {
                                                    "type": "string",
                                                    "example": "monthly"
                                                },
                                                "calculation_type": {
                                                    "type": "string",
                                                    "example": "flat"
                                                },
                                                "min_value": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "max_value": {
                                                    "type": "integer",
                                                    "example": 1000
                                                },
                                                "valid_from": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-01-01"
                                                },
                                                "valid_until": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-12-31"
                                                },
                                                "billing_start_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-01-01"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Pricing rule not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Pricing Rules"
                ],
                "summary": "Delete pricing rule",
                "description": "Delete a pricing rule",
                "operationId": "deletePricingRule",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Pricing rule ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pricing rule deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pricing rule deleted successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Pricing rule not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get all settings",
                "description": "Returns a list of all settings",
                "operationId": "getSettings",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Setting"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Settings retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Settings"
                ],
                "summary": "Create a new setting",
                "description": "Creates a new setting and returns it",
                "operationId": "storeSetting",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "key",
                                    "type",
                                    "group"
                                ],
                                "properties": {
                                    "key": {
                                        "type": "string",
                                        "example": "app_name"
                                    },
                                    "value": {
                                        "type": "string",
                                        "example": "Loyalty.lt"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "string",
                                            "integer",
                                            "boolean",
                                            "json",
                                            "html"
                                        ],
                                        "example": "string"
                                    },
                                    "group": {
                                        "type": "string",
                                        "example": "app"
                                    },
                                    "label": {
                                        "type": "string",
                                        "example": "Application Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "The name of the application"
                                    },
                                    "is_public": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_editable": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Setting created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Setting"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Setting created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/settings/{key}": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get setting by key",
                "description": "Returns a single setting by its key",
                "operationId": "showSetting",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Setting key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Setting"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Setting retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Setting not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update setting",
                "description": "Updates an existing setting and returns it",
                "operationId": "updateSetting",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Setting key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "example": "New Loyalty.lt"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "string",
                                            "integer",
                                            "boolean",
                                            "json",
                                            "html"
                                        ],
                                        "example": "string"
                                    },
                                    "group": {
                                        "type": "string",
                                        "example": "app"
                                    },
                                    "label": {
                                        "type": "string",
                                        "example": "Application Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "The name of the application"
                                    },
                                    "is_public": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_editable": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Setting updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Setting"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Setting updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Setting not found"
                    },
                    "403": {
                        "description": "Setting is not editable"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Settings"
                ],
                "summary": "Delete setting",
                "description": "Deletes a setting",
                "operationId": "deleteSetting",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Setting key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Setting deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Setting deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Setting not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/settings/groups": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get all setting groups",
                "description": "Returns a list of all unique setting groups",
                "operationId": "getSettingGroups",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Setting groups retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/settings/types": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get all setting types",
                "description": "Returns a list of all available setting types",
                "operationId": "getSettingTypes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Setting types retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/settings/public/{key}": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get public setting value",
                "description": "Returns a public setting value by its key",
                "operationId": "getPublicSettingValue",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Setting key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Loyalty.lt"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Setting value retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Setting not found or not public"
                    }
                }
            }
        },
        "/{locale}/shop/auth/request-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request OTP Code",
                "description": "Send OTP code to user's phone for authentication",
                "operationId": "shoprequestOtp",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "type"
                                ],
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "+37060000000"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "login",
                                            "register",
                                            "verify"
                                        ],
                                        "example": "login"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+37060000000"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/shop/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login with OTP",
                "description": "Login user with phone and OTP code",
                "operationId": "shoplogin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "otp"
                                ],
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "+37060000000"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string"
                                                },
                                                "refresh_token": {
                                                    "type": "string"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/shop/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register new user",
                "description": "Register new user with phone and OTP",
                "operationId": "shopregister",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "otp",
                                    "name"
                                ],
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "+37060000000"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Jonas Jonaitis"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jonas@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful"
                    }
                }
            }
        },
        "/{locale}/shop/auth/verify-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP code",
                "description": "Verify OTP code without authentication",
                "operationId": "shopverifyOtp",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "otp"
                                ],
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "+37060000000"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP verified successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired OTP"
                    }
                }
            }
        },
        "/{locale}/shop/auth/qr-login/generate": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Generate QR Login Session",
                "description": "Generate a QR code session for authentication",
                "operationId": "shopgenerateQrLogin",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "device_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "My Desktop"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "QR login session generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "session_id": {
                                                    "type": "string",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "qr_code": {
                                                    "type": "string",
                                                    "example": "abcd1234efgh5678"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to generate QR login"
                    }
                }
            }
        },
        "/{locale}/shop/auth/qr-login/poll/{sessionId}": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Poll QR Login Status",
                "description": "Poll the status of a QR login session",
                "operationId": "shoppollQrLogin",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "The ID of the QR login session",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR login status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "session_id": {
                                                    "type": "string",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pending",
                                                        "scanned",
                                                        "confirmed"
                                                    ],
                                                    "example": "pending"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "QR session not found or expired"
                    },
                    "500": {
                        "description": "Failed to poll QR login"
                    }
                }
            }
        },
        "/{locale}/shop/auth/qr-login/scan/{qrCode}": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Scan QR code (mobile app)",
                "description": "Scan a QR code generated by the mobile app",
                "operationId": "shopscanQrLogin",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "qrCode",
                        "in": "path",
                        "description": "The QR code string",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "abcd1234efgh5678"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR code scanned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "QR code scanned successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "session_id": {
                                                    "type": "string",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "device_name": {
                                                    "type": "string",
                                                    "example": "My Mobile App"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "404": {
                        "description": "QR code not found or expired"
                    },
                    "500": {
                        "description": "Failed to scan QR code"
                    }
                }
            }
        },
        "/{locale}/shop/auth/qr-login/confirm/{sessionId}": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Confirm QR login",
                "description": "Confirm a QR login session",
                "operationId": "shopconfirmQrLogin",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "The ID of the QR login session",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR login confirmed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "QR login confirmed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "403": {
                        "description": "QR session not found or unauthorized"
                    },
                    "500": {
                        "description": "Failed to confirm QR login"
                    }
                }
            }
        },
        "/{locale}/shop/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout User",
                "description": "Logout the authenticated user and revoke tokens",
                "operationId": "shoplogout",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Logout failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh Token",
                "description": "Refresh the access token using a refresh token",
                "operationId": "shoprefresh",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "refresh_token"
                                ],
                                "properties": {
                                    "refresh_token": {
                                        "type": "string",
                                        "example": "your_refresh_token"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string"
                                                },
                                                "refresh_token": {
                                                    "type": "string"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid refresh token"
                    },
                    "500": {
                        "description": "Token refresh failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Current User",
                "description": "Get the authenticated user's details",
                "operationId": "shopme",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+37060000000"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "member"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "phone_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Failed to get user info"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/auth/profile": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update User Profile",
                "description": "Update the authenticated user's profile details",
                "operationId": "shopupdateProfile",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+37060000000"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "member"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "phone_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "400": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Profile update failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/auth/preferences": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get User Preferences",
                "description": "Get the authenticated user's preferences",
                "operationId": "shopgetPreferences",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User preferences retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "key1": {
                                                    "type": "string",
                                                    "example": "value1"
                                                },
                                                "key2": {
                                                    "type": "string",
                                                    "example": "value2"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Failed to get preferences"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update User Preferences",
                "description": "Update the authenticated user's preferences",
                "operationId": "shopupdatePreferences",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "key1": {
                                        "type": "string",
                                        "example": "value1"
                                    },
                                    "key2": {
                                        "type": "string",
                                        "example": "value2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preferences updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Preferences updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "key1": {
                                                    "type": "string",
                                                    "example": "value1"
                                                },
                                                "key2": {
                                                    "type": "string",
                                                    "example": "value2"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "400": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Preferences update failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/auth/statistics": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get User Statistics",
                "description": "Get the authenticated user's loyalty card and coupon statistics",
                "operationId": "shopgetUserStatistics",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "total_cards": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total_points": {
                                                    "type": "integer",
                                                    "example": 1500
                                                },
                                                "total_coupons": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "active_coupons": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Failed to get statistics"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/auth/account": {
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Delete User Account",
                "description": "Delete the authenticated user's account",
                "operationId": "shopdeleteAccount",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "500": {
                        "description": "Account deletion failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/coupons": {
            "get": {
                "tags": [
                    "Shop Coupons"
                ],
                "summary": "List User Coupons",
                "description": "Get a paginated list of user's coupons with filtering options",
                "operationId": "shopListCoupons",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by coupon status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "redeemed",
                                "expired",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "offer_id",
                        "in": "query",
                        "description": "Filter by offer ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "expires_soon",
                        "in": "query",
                        "description": "Filter coupons expiring within 7 days",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by coupon code or offer title",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 100
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupons retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "code": {
                                                                "type": "string",
                                                                "example": "SAVE20"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "active"
                                                            },
                                                            "expires_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "is_expired": {
                                                                "type": "boolean",
                                                                "example": false
                                                            },
                                                            "expires_in_days": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "is_redeemable": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "offer": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "meta": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer"
                                                        },
                                                        "per_page": {
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        },
                                                        "last_page": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/coupons/{id}": {
            "get": {
                "tags": [
                    "Shop Coupons"
                ],
                "summary": "Get Single Coupon Details",
                "description": "Get details of a specific coupon by ID",
                "operationId": "shopGetCoupon",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "SAVE20"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "is_expired": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "expires_in_days": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "is_redeemable": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "offer": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Coupon not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/coupons/{id}/redeem": {
            "post": {
                "tags": [
                    "Shop Coupons"
                ],
                "summary": "Redeem Coupon",
                "description": "Redeem a specific coupon by ID",
                "operationId": "shopRedeemCoupon",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "redemption_reference": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "notes": {
                                        "type": "string",
                                        "maxLength": 500
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Coupon redeemed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "coupon": {
                                                    "type": "object"
                                                },
                                                "redemption_details": {
                                                    "properties": {
                                                        "redeemed_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "reference": {
                                                            "type": "string",
                                                            "example": "REF123"
                                                        },
                                                        "location": {
                                                            "type": "string",
                                                            "example": "Store A"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Validation failed or coupon not redeemable"
                    },
                    "404": {
                        "description": "Coupon not found"
                    },
                    "422": {
                        "description": "Offer is no longer valid"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/coupons/{id}/cancel": {
            "post": {
                "tags": [
                    "Shop Coupons"
                ],
                "summary": "Cancel Coupon",
                "description": "Cancel a specific coupon by ID",
                "operationId": "shopCancelCoupon",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "reason": {
                                        "type": "string",
                                        "maxLength": 255
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Coupon cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "coupon": {
                                                    "type": "object"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Coupon cancelled successfully"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Validation failed or coupon not cancellable"
                    },
                    "404": {
                        "description": "Coupon not found"
                    },
                    "422": {
                        "description": "Cannot cancel coupon within 24 hours of expiration"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/coupons/expiring": {
            "get": {
                "tags": [
                    "Shop Coupons"
                ],
                "summary": "Get Expiring Coupons",
                "description": "Get a paginated list of user's coupons expiring within a specified number of days",
                "operationId": "shopGetExpiringCoupons",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to check for expiration",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 30,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expiring coupons retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "code": {
                                                                "type": "string",
                                                                "example": "SAVE20"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "active"
                                                            },
                                                            "expires_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "is_expired": {
                                                                "type": "boolean",
                                                                "example": false
                                                            },
                                                            "expires_in_hours": {
                                                                "type": "integer",
                                                                "example": 12
                                                            },
                                                            "expires_in_days": {
                                                                "type": "integer",
                                                                "example": 0
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "meta": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer"
                                                        },
                                                        "per_page": {
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        },
                                                        "last_page": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "expiring_within_days": {
                                                    "type": "integer",
                                                    "example": 7
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/coupons/statistics": {
            "get": {
                "tags": [
                    "Shop Coupons"
                ],
                "summary": "Get Coupon Statistics",
                "description": "Get various statistics about user's coupons",
                "operationId": "shopGetCouponStatistics",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "total_coupons": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "active_coupons": {
                                                    "type": "integer",
                                                    "example": 80
                                                },
                                                "redeemed_coupons": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "expired_coupons": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "cancelled_coupons": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "expiring_soon": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total_savings": {
                                                    "type": "number",
                                                    "example": 150
                                                },
                                                "redemption_rate": {
                                                    "type": "number",
                                                    "example": 20
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/games": {
            "get": {
                "tags": [
                    "Shop Games"
                ],
                "summary": "List Available Games",
                "description": "Get a paginated list of available games with filtering options",
                "operationId": "shopListGames",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by game type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "slot_machine",
                                "wheel_of_fortune",
                                "scratch_card",
                                "memory",
                                "quiz",
                                "puzzle"
                            ]
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by game category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 50
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_featured",
                        "in": "query",
                        "description": "Filter by featured status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "playable_only",
                        "in": "query",
                        "description": "Show only games user can currently play",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by game name or description",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 100
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Games retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Wheel of Fortune"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "wheel_of_fortune"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Spin the wheel to win prizes"
                                                            },
                                                            "is_active": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "is_featured": {
                                                                "type": "boolean",
                                                                "example": false
                                                            },
                                                            "points_cost": {
                                                                "type": "integer",
                                                                "example": 100
                                                            },
                                                            "daily_limit": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "can_play": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "play_restriction": {
                                                                "type": "string",
                                                                "example": null
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "meta": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/games/{id}": {
            "get": {
                "tags": [
                    "Shop Games"
                ],
                "summary": "Get Single Game Details",
                "description": "Get detailed information for a specific game",
                "operationId": "shopGetGame",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Wheel of Fortune"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "wheel_of_fortune"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Spin the wheel to win prizes"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "is_featured": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "points_cost": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "daily_limit": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "can_play": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "play_restriction": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "user_history": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "completed"
                                                            },
                                                            "score": {
                                                                "type": "integer",
                                                                "example": 1000
                                                            },
                                                            "reward_claimed": {
                                                                "type": "boolean",
                                                                "example": false
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "example": "2023-10-27T10:00:00Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "today_play_count": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Game not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/games/{id}/start-session": {
            "post": {
                "tags": [
                    "Shop Games"
                ],
                "summary": "Start New Game Session",
                "description": "Initiates a new game session for a specific game",
                "operationId": "shopStartGameSession",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Game ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game session started successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "session_key": {
                                                    "type": "string",
                                                    "example": "game_session_1234567890abcdef1234567890abcdef"
                                                },
                                                "game": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Wheel of Fortune"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "wheel_of_fortune"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Spin the wheel to win prizes"
                                                        },
                                                        "is_active": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "is_featured": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "points_cost": {
                                                            "type": "integer",
                                                            "example": 100
                                                        },
                                                        "daily_limit": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "can_play": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "play_restriction": {
                                                            "type": "string",
                                                            "example": null
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "example": "2023-10-27T11:00:00Z"
                                                },
                                                "points_deducted": {
                                                    "type": "integer",
                                                    "example": 100
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Game not playable"
                    },
                    "404": {
                        "description": "Game not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/game-sessions/{sessionKey}": {
            "get": {
                "tags": [
                    "Shop Games"
                ],
                "summary": "Get Game Session Status",
                "description": "Retrieves the status of a specific game session",
                "operationId": "shopGetGameSession",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "sessionKey",
                        "in": "path",
                        "description": "Session key",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "game_session_1234567890abcdef1234567890abcdef"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game session retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "game_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "session_key": {
                                                    "type": "string",
                                                    "example": "game_session_1234567890abcdef1234567890abcdef"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "score": {
                                                    "type": "integer",
                                                    "example": 1000
                                                },
                                                "level": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "progress_data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    },
                                                    "example": {
                                                        "level": 5,
                                                        "score": 1000
                                                    }
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "example": "2023-10-27T10:00:00Z"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "example": "2023-10-27T11:00:00Z"
                                                },
                                                "completed_at": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "reward_claimed": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "game": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Wheel of Fortune"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "wheel_of_fortune"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Spin the wheel to win prizes"
                                                        },
                                                        "is_active": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "is_featured": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "points_cost": {
                                                            "type": "integer",
                                                            "example": 100
                                                        },
                                                        "daily_limit": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "can_play": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "play_restriction": {
                                                            "type": "string",
                                                            "example": null
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Game session not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/game-sessions/{sessionKey}/progress": {
            "put": {
                "tags": [
                    "Shop Games"
                ],
                "summary": "Record Game Progress",
                "description": "Updates the progress of a specific game session",
                "operationId": "shopRecordGameProgress",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "sessionKey",
                        "in": "path",
                        "description": "Session key",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "game_session_1234567890abcdef1234567890abcdef"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "score": {
                                        "type": "integer",
                                        "example": 1500
                                    },
                                    "level": {
                                        "type": "integer",
                                        "example": 6
                                    },
                                    "progress_data": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        },
                                        "example": {
                                            "level": 6,
                                            "score": 1500
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Game progress updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "game_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "session_key": {
                                                    "type": "string",
                                                    "example": "game_session_1234567890abcdef1234567890abcdef"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "score": {
                                                    "type": "integer",
                                                    "example": 1500
                                                },
                                                "level": {
                                                    "type": "integer",
                                                    "example": 6
                                                },
                                                "progress_data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    },
                                                    "example": {
                                                        "level": 6,
                                                        "score": 1500
                                                    }
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "example": "2023-10-27T10:00:00Z"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "example": "2023-10-27T11:00:00Z"
                                                },
                                                "completed_at": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "reward_claimed": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "game": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Wheel of Fortune"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "wheel_of_fortune"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Spin the wheel to win prizes"
                                                        },
                                                        "is_active": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "is_featured": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "points_cost": {
                                                            "type": "integer",
                                                            "example": 100
                                                        },
                                                        "daily_limit": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "can_play": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "play_restriction": {
                                                            "type": "string",
                                                            "example": null
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Active game session not found"
                    },
                    "410": {
                        "description": "Game session has expired"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/game-sessions/{sessionKey}/claim-reward": {
            "post": {
                "tags": [
                    "Shop Games"
                ],
                "summary": "Claim Game Reward",
                "description": "Claims the reward for a specific game session",
                "operationId": "shopClaimGameReward",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "sessionKey",
                        "in": "path",
                        "description": "Session key",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "game_session_1234567890abcdef1234567890abcdef"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reward claimed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "reward": {
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "example": "points"
                                                        },
                                                        "value": {
                                                            "type": "integer",
                                                            "example": 100
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Game reward points"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "points_earned": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "coupon_created": {
                                                    "type": "integer",
                                                    "example": null
                                                },
                                                "session": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "user_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "game_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "session_key": {
                                                            "type": "string",
                                                            "example": "game_session_1234567890abcdef1234567890abcdef"
                                                        },
                                                        "status": {
                                                            "type": "string",
                                                            "example": "completed"
                                                        },
                                                        "score": {
                                                            "type": "integer",
                                                            "example": 1000
                                                        },
                                                        "level": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "progress_data": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object"
                                                            },
                                                            "example": {
                                                                "level": 5,
                                                                "score": 1000
                                                            }
                                                        },
                                                        "started_at": {
                                                            "type": "string",
                                                            "example": "2023-10-27T10:00:00Z"
                                                        },
                                                        "expires_at": {
                                                            "type": "string",
                                                            "example": "2023-10-27T11:00:00Z"
                                                        },
                                                        "completed_at": {
                                                            "type": "string",
                                                            "example": "2023-10-27T10:30:00Z"
                                                        },
                                                        "reward_claimed": {
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Active game session not found"
                    },
                    "409": {
                        "description": "Reward already claimed"
                    },
                    "410": {
                        "description": "Game session has expired"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/game-sessions/history": {
            "get": {
                "tags": [
                    "Shop Games"
                ],
                "summary": "Get User's Game History",
                "description": "Retrieves the game history for the authenticated user",
                "operationId": "shopGetGameHistory",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "game_id",
                        "in": "query",
                        "description": "Filter by game ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by session status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "completed",
                                "expired",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter by date from",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter by date to (inclusive)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-10-27"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "user_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "game_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "session_key": {
                                                                "type": "string",
                                                                "example": "game_session_1234567890abcdef1234567890abcdef"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "completed"
                                                            },
                                                            "score": {
                                                                "type": "integer",
                                                                "example": 1000
                                                            },
                                                            "reward_claimed": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "example": "2023-10-27T10:00:00Z"
                                                            },
                                                            "completed_at": {
                                                                "type": "string",
                                                                "example": "2023-10-27T10:30:00Z"
                                                            },
                                                            "game": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Wheel of Fortune"
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "example": "wheel_of_fortune"
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "example": "Spin the wheel to win prizes"
                                                                    },
                                                                    "is_active": {
                                                                        "type": "boolean",
                                                                        "example": true
                                                                    },
                                                                    "is_featured": {
                                                                        "type": "boolean",
                                                                        "example": false
                                                                    },
                                                                    "points_cost": {
                                                                        "type": "integer",
                                                                        "example": 100
                                                                    },
                                                                    "daily_limit": {
                                                                        "type": "integer",
                                                                        "example": 5
                                                                    },
                                                                    "can_play": {
                                                                        "type": "boolean",
                                                                        "example": true
                                                                    },
                                                                    "play_restriction": {
                                                                        "type": "string",
                                                                        "example": null
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "meta": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/loyalty-cards": {
            "get": {
                "tags": [
                    "Shop Loyalty Cards"
                ],
                "summary": "List Loyalty Cards",
                "description": "Get a paginated list of user's loyalty cards",
                "operationId": "shopListLoyaltyCards",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page (max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 50,
                            "example": 15
                        }
                    },
                    {
                        "name": "card_type",
                        "in": "query",
                        "description": "Filter by card type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "universal",
                                "partner_specific",
                                "third_party"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by card name or number",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Loyalty cards retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "card_number": {
                                                        "type": "string",
                                                        "example": "LC00000001"
                                                    },
                                                    "card_name": {
                                                        "type": "string",
                                                        "example": "My Loyalty Card"
                                                    },
                                                    "qr_code": {
                                                        "type": "string",
                                                        "example": "550e8400-e29b-41d4-a716-446655440000"
                                                    },
                                                    "barcode_type": {
                                                        "type": "string",
                                                        "example": "QR"
                                                    },
                                                    "card_type": {
                                                        "type": "string",
                                                        "example": "universal"
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "points_balance": {
                                                        "type": "integer",
                                                        "example": 1250
                                                    },
                                                    "partner": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Partner Name"
                                                            },
                                                            "logo_url": {
                                                                "type": "string",
                                                                "example": "https://example.com/logo.png"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "last_used_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 68
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Shop Loyalty Cards"
                ],
                "summary": "Create Loyalty Card",
                "description": "Create a new loyalty card for the authenticated user",
                "operationId": "shopCreateLoyaltyCard",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "card_name": {
                                        "description": "Custom name for the card",
                                        "type": "string",
                                        "example": "My Store Card"
                                    },
                                    "card_type": {
                                        "type": "string",
                                        "enum": [
                                            "universal",
                                            "partner_specific"
                                        ],
                                        "example": "universal"
                                    },
                                    "barcode_type": {
                                        "type": "string",
                                        "enum": [
                                            "QR",
                                            "EAN13",
                                            "CODE128",
                                            "NFC"
                                        ],
                                        "example": "QR"
                                    },
                                    "partner_id": {
                                        "description": "Partner ID (required for partner_specific cards)",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Loyalty card created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Loyalty card created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "card_number": {
                                                    "type": "string",
                                                    "example": "LC00000002"
                                                },
                                                "card_name": {
                                                    "type": "string",
                                                    "example": "My Store Card"
                                                },
                                                "qr_code": {
                                                    "type": "string",
                                                    "example": "550e8400-e29b-41d4-a716-446655440001"
                                                },
                                                "barcode_type": {
                                                    "type": "string",
                                                    "example": "QR"
                                                },
                                                "card_type": {
                                                    "type": "string",
                                                    "example": "universal"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "points_balance": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/loyalty-cards/{id}": {
            "get": {
                "tags": [
                    "Shop Loyalty Cards"
                ],
                "summary": "Get Loyalty Card Details",
                "description": "Get detailed information about a specific loyalty card",
                "operationId": "shopGetLoyaltyCard",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Loyalty card ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Loyalty card details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "card_number": {
                                                    "type": "string",
                                                    "example": "LC00000001"
                                                },
                                                "card_name": {
                                                    "type": "string",
                                                    "example": "My Loyalty Card"
                                                },
                                                "qr_code": {
                                                    "type": "string",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "barcode_type": {
                                                    "type": "string",
                                                    "example": "QR"
                                                },
                                                "card_type": {
                                                    "type": "string",
                                                    "example": "universal"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "points_balance": {
                                                    "type": "integer",
                                                    "example": 1250
                                                },
                                                "points_history": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "earned"
                                                            },
                                                            "points": {
                                                                "type": "integer",
                                                                "example": 100
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Purchase at Partner Store"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "partner": {
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Loyalty card not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Shop Loyalty Cards"
                ],
                "summary": "Update Loyalty Card",
                "description": "Update loyalty card information",
                "operationId": "shopUpdateLoyaltyCard",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Loyalty card ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "card_name": {
                                        "type": "string",
                                        "example": "Updated Card Name"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Loyalty card updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Loyalty card updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "card_name": {
                                                    "type": "string",
                                                    "example": "Updated Card Name"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Loyalty card not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Shop Loyalty Cards"
                ],
                "summary": "Deactivate Loyalty Card",
                "description": "Deactivate (soft delete) a loyalty card",
                "operationId": "shopDeactivateLoyaltyCard",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Loyalty card ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Loyalty card deactivated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Loyalty card deactivated successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Loyalty card not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/loyalty-cards/third-party": {
            "post": {
                "tags": [
                    "Shop Loyalty Cards"
                ],
                "summary": "Add Third-Party Card",
                "description": "Add an external third-party loyalty card to the user's wallet",
                "operationId": "shopAddThirdPartyCard",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "card_name",
                                    "card_number",
                                    "barcode_type"
                                ],
                                "properties": {
                                    "card_name": {
                                        "type": "string",
                                        "example": "Coffee Shop Loyalty Card"
                                    },
                                    "card_number": {
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "barcode_type": {
                                        "type": "string",
                                        "enum": [
                                            "QR",
                                            "EAN13",
                                            "CODE128",
                                            "NFC"
                                        ],
                                        "example": "CODE128"
                                    },
                                    "partner_id": {
                                        "description": "Optional partner ID if card belongs to a platform partner",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "barcode_image": {
                                        "description": "Image file of the card's barcode",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "card_image": {
                                        "description": "Image file of the physical card",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "expires_at": {
                                        "description": "Card expiration date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-31"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Third-party card added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Third-party card added successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "card_name": {
                                                    "type": "string",
                                                    "example": "Coffee Shop Loyalty Card"
                                                },
                                                "card_number": {
                                                    "type": "string",
                                                    "example": "123456789"
                                                },
                                                "card_type": {
                                                    "type": "string",
                                                    "example": "third_party"
                                                },
                                                "barcode_type": {
                                                    "type": "string",
                                                    "example": "CODE128"
                                                },
                                                "barcode_image_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/storage/barcodes/image.png"
                                                },
                                                "card_image_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/storage/cards/image.png"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-12-31"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/offers": {
            "get": {
                "tags": [
                    "Shop Offers & Coupons"
                ],
                "summary": "List Available Offers",
                "description": "Get a paginated list of available offers for the user",
                "operationId": "shopListOffers",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page (max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 50,
                            "example": 15
                        }
                    },
                    {
                        "name": "partner_id",
                        "in": "query",
                        "description": "Filter by partner",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Offers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "20% off all items"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Get 20% discount on all items in store"
                                                    },
                                                    "discount_type": {
                                                        "type": "string",
                                                        "example": "percentage"
                                                    },
                                                    "discount_value": {
                                                        "type": "number",
                                                        "example": 20
                                                    },
                                                    "minimum_points": {
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "maximum_uses": {
                                                        "type": "integer",
                                                        "example": 1000
                                                    },
                                                    "used_count": {
                                                        "type": "integer",
                                                        "example": 350
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "retail"
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "starts_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "expires_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "partner": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Partner Store"
                                                            },
                                                            "logo_url": {
                                                                "type": "string",
                                                                "example": "https://example.com/logo.png"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 68
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/offers/{id}": {
            "get": {
                "tags": [
                    "Shop Offers & Coupons"
                ],
                "summary": "Get Offer Details",
                "description": "Get detailed information about a specific offer",
                "operationId": "shopGetOffer",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Offer ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Offer details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "20% off all items"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Get 20% discount on all items in store"
                                                },
                                                "terms_and_conditions": {
                                                    "type": "string",
                                                    "example": "Valid for in-store purchases only"
                                                },
                                                "discount_type": {
                                                    "type": "string",
                                                    "example": "percentage"
                                                },
                                                "discount_value": {
                                                    "type": "number",
                                                    "example": 20
                                                },
                                                "minimum_points": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "maximum_uses": {
                                                    "type": "integer",
                                                    "example": 1000
                                                },
                                                "used_count": {
                                                    "type": "integer",
                                                    "example": 350
                                                },
                                                "user_claimed_count": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "retail"
                                                },
                                                "image_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/offer.jpg"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "starts_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "partner": {
                                                    "type": "object"
                                                },
                                                "user_can_claim": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Offer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/offers/{id}/claim": {
            "post": {
                "tags": [
                    "Shop Offers & Coupons"
                ],
                "summary": "Claim Offer as Coupon",
                "description": "Generate a coupon from an offer for the authenticated user",
                "operationId": "shopClaimOffer",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Offer ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "loyalty_card_id": {
                                        "description": "Optional loyalty card to deduct points from",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Coupon generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Coupon generated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "coupon_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "coupon_code": {
                                                    "type": "string",
                                                    "example": "COUPON-ABC123"
                                                },
                                                "offer_title": {
                                                    "type": "string",
                                                    "example": "20% off all items"
                                                },
                                                "discount_type": {
                                                    "type": "string",
                                                    "example": "percentage"
                                                },
                                                "discount_value": {
                                                    "type": "number",
                                                    "example": 20
                                                },
                                                "qr_code": {
                                                    "type": "string",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "points_deducted": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot claim offer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Offer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/offers/coupons": {
            "get": {
                "tags": [
                    "Shop Offers & Coupons"
                ],
                "summary": "List User Coupons from Offers",
                "description": "Get a paginated list of user's coupons generated from offers",
                "operationId": "shopListOfferCoupons",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page (max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 50,
                            "example": 15
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "used",
                                "expired"
                            ]
                        }
                    },
                    {
                        "name": "partner_id",
                        "in": "query",
                        "description": "Filter by partner",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupons retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "COUPON-ABC123"
                                                    },
                                                    "qr_code": {
                                                        "type": "string",
                                                        "example": "550e8400-e29b-41d4-a716-446655440000"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "active"
                                                    },
                                                    "offer": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "20% off all items"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Get 20% discount"
                                                            },
                                                            "discount_type": {
                                                                "type": "string",
                                                                "example": "percentage"
                                                            },
                                                            "discount_value": {
                                                                "type": "number",
                                                                "example": 20
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "partner": {
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "used_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "expires_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/offers/coupons/{id}/redeem": {
            "post": {
                "tags": [
                    "Shop Offers & Coupons"
                ],
                "summary": "Redeem Coupon",
                "description": "Redeem a coupon and mark it as used",
                "operationId": "shopRedeemOfferCoupon",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "location": {
                                        "description": "Optional redemption location",
                                        "type": "string",
                                        "example": "Store Location A"
                                    },
                                    "notes": {
                                        "description": "Optional redemption notes",
                                        "type": "string",
                                        "example": "Redeemed for purchase #12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Coupon redeemed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Coupon redeemed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "coupon_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "COUPON-ABC123"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "used"
                                                },
                                                "redeemed_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Coupon already used or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Coupon not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/points": {
            "get": {
                "tags": [
                    "Shop Points"
                ],
                "summary": "List Point Transactions",
                "description": "Get a paginated list of user's point transactions",
                "operationId": "shopListPointTransactions",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page (max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 50,
                            "example": 15
                        }
                    },
                    {
                        "name": "card_id",
                        "in": "query",
                        "description": "Filter by specific loyalty card",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by transaction type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "earned",
                                "spent",
                                "bonus",
                                "expired",
                                "refund"
                            ]
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter transactions from date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-01"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter transactions to date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-12-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Point transactions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "loyalty_card_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "points": {
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "earned"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Purchase at Partner Store"
                                                    },
                                                    "reference_id": {
                                                        "type": "string",
                                                        "example": "ORDER-123456"
                                                    },
                                                    "card": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "card_name": {
                                                                "type": "string",
                                                                "example": "My Loyalty Card"
                                                            },
                                                            "card_number": {
                                                                "type": "string",
                                                                "example": "LC00000001"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 68
                                                },
                                                "total_points_earned": {
                                                    "type": "integer",
                                                    "example": 2500
                                                },
                                                "total_points_spent": {
                                                    "type": "integer",
                                                    "example": 1250
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Shop Points"
                ],
                "summary": "Add or Deduct Points",
                "description": "Add or deduct points from a loyalty card",
                "operationId": "shopManagePoints",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "loyalty_card_id",
                                    "points",
                                    "type",
                                    "description"
                                ],
                                "properties": {
                                    "loyalty_card_id": {
                                        "description": "Loyalty card ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "points": {
                                        "description": "Number of points (positive number)",
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "earned",
                                            "spent",
                                            "bonus",
                                            "expired",
                                            "refund"
                                        ],
                                        "example": "earned"
                                    },
                                    "description": {
                                        "description": "Transaction description",
                                        "type": "string",
                                        "example": "Purchase at Partner Store"
                                    },
                                    "reference_id": {
                                        "description": "External reference ID (optional)",
                                        "type": "string",
                                        "example": "ORDER-123456"
                                    },
                                    "metadata": {
                                        "description": "Additional metadata (optional)",
                                        "type": "object",
                                        "example": {
                                            "order_id": "12345",
                                            "store_id": "67890"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Points transaction created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Points transaction completed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "loyalty_card_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "points": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "earned"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Purchase at Partner Store"
                                                },
                                                "reference_id": {
                                                    "type": "string",
                                                    "example": "ORDER-123456"
                                                },
                                                "new_balance": {
                                                    "type": "integer",
                                                    "example": 1350
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Insufficient points for spending",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/points/balance/{card_id}": {
            "get": {
                "tags": [
                    "Shop Points"
                ],
                "summary": "Get Card Points Balance",
                "description": "Get the current points balance for a specific loyalty card",
                "operationId": "shopGetCardBalance",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "card_id",
                        "in": "path",
                        "description": "Loyalty card ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Points balance retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "card_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "card_name": {
                                                    "type": "string",
                                                    "example": "My Loyalty Card"
                                                },
                                                "card_number": {
                                                    "type": "string",
                                                    "example": "LC00000001"
                                                },
                                                "points_balance": {
                                                    "type": "integer",
                                                    "example": 1250
                                                },
                                                "total_earned": {
                                                    "type": "integer",
                                                    "example": 2500
                                                },
                                                "total_spent": {
                                                    "type": "integer",
                                                    "example": 1250
                                                },
                                                "last_transaction_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Loyalty card not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/points/{id}": {
            "get": {
                "tags": [
                    "Shop Points"
                ],
                "summary": "Get Point Transaction Details",
                "description": "Get detailed information about a specific point transaction",
                "operationId": "shopGetPointTransaction",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Point transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Point transaction details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "loyalty_card_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "points": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "earned"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Purchase at Partner Store"
                                                },
                                                "reference_id": {
                                                    "type": "string",
                                                    "example": "ORDER-123456"
                                                },
                                                "metadata": {
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "card": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "card_name": {
                                                            "type": "string",
                                                            "example": "My Loyalty Card"
                                                        },
                                                        "card_number": {
                                                            "type": "string",
                                                            "example": "LC00000001"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Point transaction not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/points/summary": {
            "get": {
                "tags": [
                    "Shop Points"
                ],
                "summary": "Get Points Summary",
                "description": "Get a summary of points across all user's cards",
                "operationId": "shopGetPointsSummary",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter from date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter to date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Points summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "total_balance": {
                                                    "type": "integer",
                                                    "example": 2500
                                                },
                                                "total_earned": {
                                                    "type": "integer",
                                                    "example": 5000
                                                },
                                                "total_spent": {
                                                    "type": "integer",
                                                    "example": 2500
                                                },
                                                "active_cards_count": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "cards_summary": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "card_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "card_name": {
                                                                "type": "string",
                                                                "example": "My Loyalty Card"
                                                            },
                                                            "card_number": {
                                                                "type": "string",
                                                                "example": "LC00000001"
                                                            },
                                                            "balance": {
                                                                "type": "integer",
                                                                "example": 1250
                                                            },
                                                            "earned": {
                                                                "type": "integer",
                                                                "example": 2000
                                                            },
                                                            "spent": {
                                                                "type": "integer",
                                                                "example": 750
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/shops": {
            "get": {
                "tags": [
                    "Shop Shops"
                ],
                "summary": "List Shops",
                "description": "Get a paginated list of shops",
                "operationId": "shopListShops",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page (max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 50,
                            "example": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by shop name or address",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Latitude for location-based search",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Longitude for location-based search",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "Search radius in kilometers",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shops retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Downtown Store"
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "123 Main St, City"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "+370 600 00000"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "shop@example.com"
                                                    },
                                                    "website": {
                                                        "type": "string",
                                                        "example": "https://shop.example.com"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Our main downtown location"
                                                    },
                                                    "opening_hours": {
                                                        "type": "string",
                                                        "example": "Mon-Fri: 9:00-18:00"
                                                    },
                                                    "coordinates": {
                                                        "properties": {
                                                            "latitude": {
                                                                "type": "number",
                                                                "example": 54.8985
                                                            },
                                                            "longitude": {
                                                                "type": "number",
                                                                "example": 23.9036
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "images": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "partner": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Partner Name"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "distance": {
                                                        "description": "Distance in km if location search",
                                                        "type": "number",
                                                        "example": 2.5
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 68
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/shops/{id}": {
            "get": {
                "tags": [
                    "Shop Shops"
                ],
                "summary": "Get Shop Details",
                "description": "Get detailed information about a specific shop",
                "operationId": "shopGetShop",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Shop ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shop details retrieved successfully"
                    },
                    "404": {
                        "description": "Shop not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/shops/nearby": {
            "get": {
                "tags": [
                    "Shop Shops"
                ],
                "summary": "Get Nearby Shops",
                "description": "Get shops within a specified radius from given coordinates",
                "operationId": "shopGetNearbyShops",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Latitude",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": 54.8985
                        }
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Longitude",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": 23.9036
                        }
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "Search radius in kilometers",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nearby shops retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/shops/statistics": {
            "get": {
                "tags": [
                    "Shop Shops"
                ],
                "summary": "Get Shop Statistics",
                "description": "Get statistics for shops (partner-only)",
                "operationId": "shopGetShopStatistics",
                "responses": {
                    "200": {
                        "description": "Shop statistics retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/transactions": {
            "get": {
                "tags": [
                    "Shop Transactions"
                ],
                "summary": "Get Transaction History",
                "description": "Get a paginated list of user's transactions across different types",
                "operationId": "shopGetTransactions",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by transaction type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "points",
                                "coupons",
                                "games",
                                "cards"
                            ]
                        }
                    },
                    {
                        "name": "card_id",
                        "in": "query",
                        "description": "Filter by loyalty card ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Predefined period filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "today",
                                "yesterday",
                                "this_week",
                                "last_week",
                                "this_month",
                                "last_month",
                                "this_year",
                                "last_year"
                            ]
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter by date from (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter by date to (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "points_123"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "points"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Purchase reward"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "example": 100
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "completed"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "category": {
                                                                "type": "string",
                                                                "example": "earned"
                                                            },
                                                            "card_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "meta": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer"
                                                        },
                                                        "per_page": {
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        },
                                                        "last_page": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/transactions/{type}/{id}": {
            "get": {
                "tags": [
                    "Shop Transactions"
                ],
                "summary": "Get Transaction Details by ID",
                "description": "Get detailed information for a specific transaction by its ID and type",
                "operationId": "shopGetTransactionDetails",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Transaction type (points, coupon, game, card)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "points",
                                "coupon",
                                "game",
                                "card"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "points_123"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "points"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Purchase reward"
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "example": 100
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "earned"
                                                },
                                                "card_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/transactions/summary": {
            "get": {
                "tags": [
                    "Shop Transactions"
                ],
                "summary": "Get Transaction Summary",
                "description": "Get a summary of user's transactions across different types",
                "operationId": "shopGetTransactionSummary",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Predefined period filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "today",
                                "week",
                                "month",
                                "quarter",
                                "year",
                                "all"
                            ]
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter by date from (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter by date to (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "period": {
                                                    "type": "string",
                                                    "example": "today"
                                                },
                                                "date_range": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "format": "date"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "format": "date"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "total_transactions": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "points": {
                                                    "properties": {
                                                        "total_earned": {
                                                            "type": "number",
                                                            "example": 1000
                                                        },
                                                        "total_redeemed": {
                                                            "type": "number",
                                                            "example": 500
                                                        },
                                                        "total_transactions": {
                                                            "type": "integer",
                                                            "example": 100
                                                        },
                                                        "average_transaction": {
                                                            "type": "number",
                                                            "example": 10
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "coupons": {
                                                    "properties": {
                                                        "total_claimed": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "total_redeemed": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "total_expired": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "active_coupons": {
                                                            "type": "integer",
                                                            "example": 20
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "games": {
                                                    "properties": {
                                                        "total_sessions": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "completed_sessions": {
                                                            "type": "integer",
                                                            "example": 8
                                                        },
                                                        "total_score": {
                                                            "type": "number",
                                                            "example": 1000
                                                        },
                                                        "average_score": {
                                                            "type": "number",
                                                            "example": 100
                                                        },
                                                        "rewards_claimed": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "cards": {
                                                    "properties": {
                                                        "total_cards": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "active_cards": {
                                                            "type": "integer",
                                                            "example": 8
                                                        },
                                                        "digital_cards": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "physical_cards": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "third_party_cards": {
                                                            "type": "integer",
                                                            "example": 2
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/transactions/export": {
            "post": {
                "tags": [
                    "Shop Transactions"
                ],
                "summary": "Export Transactions",
                "description": "Request an export of user's transactions in a specified format",
                "operationId": "shopExportTransactions",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (csv, json, pdf)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "json",
                                "pdf"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by transaction type (points, coupon, game, card)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "points",
                                "coupon",
                                "game",
                                "card"
                            ]
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter by date from (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter by date to (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Export request submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "export_id": {
                                                    "type": "string",
                                                    "example": "export_1234567890"
                                                },
                                                "format": {
                                                    "type": "string",
                                                    "example": "csv"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "processing"
                                                },
                                                "download_url": {
                                                    "type": "string",
                                                    "example": "https://api.example.com/download/export_1234567890.csv"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "estimated_completion": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shop/xml-import/from-url": {
            "post": {
                "tags": [
                    "Shop - XML Import"
                ],
                "summary": "Import products from XML URL",
                "operationId": "08ee5948850f005a8c2d3bb935e745d3",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "lt",
                                "en"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "xml_url": {
                                        "type": "string",
                                        "example": "https://example.com/products.xml"
                                    },
                                    "validate_only": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "XML import successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "products_created": {
                                                    "type": "integer"
                                                },
                                                "products_updated": {
                                                    "type": "integer"
                                                },
                                                "offers_created": {
                                                    "type": "integer"
                                                },
                                                "offers_updated": {
                                                    "type": "integer"
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/{locale}/shop/xml-import/from-file": {
            "post": {
                "tags": [
                    "Shop - XML Import"
                ],
                "summary": "Import products from uploaded XML file",
                "operationId": "796e27fffcfd42d153467c17a124837c",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "lt",
                                "en"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "xml_file": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "validate_only": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "XML import successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/{locale}/shop/xml-import/history": {
            "get": {
                "tags": [
                    "Shop - XML Import"
                ],
                "summary": "Get XML import history for partner",
                "operationId": "46de3b177df891ed2d7a9160c281da0e",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "lt",
                                "en"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Import history retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/shop/xml-import/validate": {
            "post": {
                "tags": [
                    "Shop - XML Import"
                ],
                "summary": "Validate XML structure without importing",
                "operationId": "7608c5dd6ca098c813aa50a475bd49a8",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "lt",
                                "en"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "xml_url": {
                                        "type": "string",
                                        "example": "https://example.com/products.xml"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "XML validation result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "is_valid": {
                                                    "type": "boolean"
                                                },
                                                "product_count": {
                                                    "type": "integer"
                                                },
                                                "structure": {
                                                    "type": "object"
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/shop/xml-import/field-mappings": {
            "get": {
                "tags": [
                    "Shop - XML Import"
                ],
                "summary": "Get supported XML field mappings",
                "operationId": "eb1bb0cedd4c29b2e9373f33f3ef51b6",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "lt",
                                "en"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Field mappings retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/shop/xml-import": {
            "get": {
                "tags": [
                    "Shop - XML Import"
                ],
                "summary": "Get XML import dashboard",
                "operationId": "01b227da63b33f88a7d457379454b26d",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "lt",
                                "en"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "XML import dashboard data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/shop/xml-import/stats": {
            "get": {
                "tags": [
                    "Shop - XML Import"
                ],
                "summary": "Get XML import statistics",
                "operationId": "4eee96e7975d95df465967fbfa091bb1",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "lt",
                                "en"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Import statistics retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/shop/xml-import/{id}": {
            "delete": {
                "tags": [
                    "Shop - XML Import"
                ],
                "summary": "Delete import record",
                "operationId": "40e59b0530f71f905d61681033eeaa66",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "lt",
                                "en"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Import record deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/shops": {
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "List shops",
                "description": "Get a list of all active shops for filtering purposes",
                "operationId": "listShops",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for shop name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Downtown"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Downtown Branch"
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "123 Main St, City"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "example": "New York"
                                                    },
                                                    "partner": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Acme Restaurants"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 150
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/shops/{id}": {
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "Get shop details",
                "description": "Get details of a specific shop",
                "operationId": "getShop",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Shop ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Downtown Branch"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "123 Main St, City"
                                                },
                                                "postal_code": {
                                                    "type": "string",
                                                    "example": "12345"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "New York"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": "USA"
                                                },
                                                "latitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 40.7128
                                                },
                                                "longitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": -74.006
                                                },
                                                "contact_email": {
                                                    "type": "string",
                                                    "example": "downtown@acmerestaurants.com"
                                                },
                                                "contact_phone": {
                                                    "type": "string",
                                                    "example": "+12345678903"
                                                },
                                                "opening_hours": {
                                                    "type": "object"
                                                },
                                                "partner": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Acme Restaurants"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Shop not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/site/blog": {
            "get": {
                "tags": [
                    "Site Blog"
                ],
                "summary": "Get blog posts",
                "description": "Get paginated list of published blog posts",
                "operationId": "getBlogPosts",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category slug",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "naujienos"
                        }
                    },
                    {
                        "name": "featured",
                        "in": "query",
                        "description": "Filter featured posts",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in title and content",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "loyalty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog posts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "object"
                                                            },
                                                            "excerpt": {
                                                                "type": "object"
                                                            },
                                                            "slug": {
                                                                "type": "string",
                                                                "example": "naujiena-apie-atnaujinimus"
                                                            },
                                                            "featured_image": {
                                                                "type": "string",
                                                                "example": "https://example.com/image.jpg"
                                                            },
                                                            "category": {
                                                                "type": "object"
                                                            },
                                                            "author": {
                                                                "type": "object"
                                                            },
                                                            "published_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "reading_time": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "views": {
                                                                "type": "integer",
                                                                "example": 150
                                                            },
                                                            "is_featured": {
                                                                "type": "boolean",
                                                                "example": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/site/blog/{slug}": {
            "get": {
                "tags": [
                    "Site Blog"
                ],
                "summary": "Get single blog post",
                "description": "Get a single blog post by slug",
                "operationId": "getBlogPost",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Blog post slug",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "naujiena-apie-atnaujinimus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog post retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "object"
                                                },
                                                "content": {
                                                    "type": "object"
                                                },
                                                "excerpt": {
                                                    "type": "object"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "naujiena-apie-atnaujinimus"
                                                },
                                                "featured_image": {
                                                    "type": "string",
                                                    "example": "https://example.com/image.jpg"
                                                },
                                                "category": {
                                                    "type": "object"
                                                },
                                                "author": {
                                                    "type": "object"
                                                },
                                                "published_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "reading_time": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "views": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "meta_title": {
                                                    "type": "object"
                                                },
                                                "meta_description": {
                                                    "type": "object"
                                                },
                                                "related_posts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "next_post": {
                                                    "type": "object"
                                                },
                                                "previous_post": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Blog post not found"
                    }
                }
            }
        },
        "/{locale}/site/blog/categories": {
            "get": {
                "tags": [
                    "Site Blog"
                ],
                "summary": "Get blog categories",
                "description": "Get list of active blog categories with hierarchical structure",
                "operationId": "getBlogCategories",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "tree",
                        "in": "query",
                        "description": "Return hierarchical tree structure",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "object"
                                                    },
                                                    "slug": {
                                                        "type": "string",
                                                        "example": "naujienos"
                                                    },
                                                    "color": {
                                                        "type": "string",
                                                        "example": "#3498db"
                                                    },
                                                    "icon": {
                                                        "type": "string",
                                                        "example": "news"
                                                    },
                                                    "post_count": {
                                                        "type": "integer",
                                                        "example": 25
                                                    },
                                                    "children": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/site/blog/categories/{slug}": {
            "get": {
                "tags": [
                    "Site Blog"
                ],
                "summary": "Get blog category with posts",
                "description": "Get a blog category with its posts",
                "operationId": "getBlogCategory",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Category slug",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "naujienos"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog category retrieved successfully"
                    },
                    "404": {
                        "description": "Blog category not found"
                    }
                }
            }
        },
        "/{locale}/site/blog/search": {
            "get": {
                "tags": [
                    "Site Blog"
                ],
                "summary": "Search blog posts",
                "description": "Search blog posts by title, content, and tags",
                "operationId": "searchBlogPosts",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "loyalty"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "naujienos"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results retrieved successfully"
                    }
                }
            }
        },
        "/{locale}/site/blog/featured": {
            "get": {
                "tags": [
                    "Site Blog"
                ],
                "summary": "Get featured blog posts",
                "description": "Get featured blog posts for homepage or sidebar",
                "operationId": "getFeaturedBlogPosts",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of posts to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 20,
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Featured blog posts retrieved successfully"
                    }
                }
            }
        },
        "/{locale}/site/contact": {
            "post": {
                "tags": [
                    "Site"
                ],
                "summary": "Submit contact form",
                "description": "Submit a contact form message to the website administrators",
                "operationId": "submitContactForm",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "subject",
                                    "message"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Sender name",
                                        "type": "string",
                                        "example": "Jonas Jonaitis"
                                    },
                                    "email": {
                                        "description": "Sender email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "jonas@example.com"
                                    },
                                    "subject": {
                                        "description": "Message subject",
                                        "type": "string",
                                        "example": "Bendras klausimas"
                                    },
                                    "message": {
                                        "description": "Message content",
                                        "type": "string",
                                        "example": "Sveiki, norėčiau sužinoti daugiau informacijos..."
                                    },
                                    "type": {
                                        "description": "Contact type",
                                        "type": "string",
                                        "enum": [
                                            "general",
                                            "partnership",
                                            "support",
                                            "pricing"
                                        ],
                                        "example": "general"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact form submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Žinutė sėkmingai išsiųsta. Susisieksime su jumis greitai."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/{locale}/site/partner-applications": {
            "post": {
                "tags": [
                    "Site"
                ],
                "summary": "Submit partner application",
                "description": "Submit a partner application form",
                "operationId": "submitPartnerApplication",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "company_name",
                                    "contact_person",
                                    "email",
                                    "phone",
                                    "business_type",
                                    "locations_count",
                                    "expected_customers",
                                    "description"
                                ],
                                "properties": {
                                    "company_name": {
                                        "type": "string",
                                        "example": "Loyalty Partners Ltd"
                                    },
                                    "contact_person": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@loyaltypartners.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+37060000000"
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "https://loyaltypartners.com"
                                    },
                                    "business_type": {
                                        "type": "string",
                                        "example": "Retail"
                                    },
                                    "locations_count": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "expected_customers": {
                                        "type": "integer",
                                        "example": 1000
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "We are interested in implementing loyalty program"
                                    },
                                    "additional_info": {
                                        "type": "string",
                                        "example": "Additional information about the business"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Partner application submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Partner application submitted successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/{locale}/site/news": {
            "get": {
                "tags": [
                    "Site"
                ],
                "summary": "Get news articles",
                "description": "Get paginated list of published news articles",
                "operationId": "getNews",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "updates"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "News articles retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "object"
                                                            },
                                                            "content": {
                                                                "type": "object"
                                                            },
                                                            "slug": {
                                                                "type": "string",
                                                                "example": "naujiena-apie-atnaujinimus"
                                                            },
                                                            "category": {
                                                                "type": "string",
                                                                "example": "updates"
                                                            },
                                                            "published_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "image_url": {
                                                                "type": "string",
                                                                "example": "https://example.com/image.jpg"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/site/news/{slug}": {
            "get": {
                "tags": [
                    "Site"
                ],
                "summary": "Get single news article",
                "description": "Get a single news article by slug",
                "operationId": "getNewsArticle",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Article slug",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "naujiena-apie-atnaujinimus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "News article retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "object"
                                                },
                                                "content": {
                                                    "type": "object"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "naujiena-apie-atnaujinimus"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "updates"
                                                },
                                                "published_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "image_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/image.jpg"
                                                },
                                                "views": {
                                                    "type": "integer",
                                                    "example": 150
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "News article not found"
                    }
                }
            }
        },
        "/{locale}/site/newsletter/subscribe": {
            "post": {
                "tags": [
                    "Newsletter"
                ],
                "summary": "Subscribe to newsletter",
                "description": "Subscribe user to newsletter with preferences",
                "operationId": "subscribeNewsletter",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Jonas Jonaitis"
                                    },
                                    "preferences": {
                                        "properties": {
                                            "promotions": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "news": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "partnerships": {
                                                "type": "boolean",
                                                "example": false
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "website"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully subscribed to newsletter"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/{locale}/site/newsletter/unsubscribe": {
            "post": {
                "tags": [
                    "Newsletter"
                ],
                "summary": "Unsubscribe from newsletter",
                "description": "Unsubscribe user from newsletter",
                "operationId": "unsubscribeNewsletter",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully unsubscribed from newsletter"
                    },
                    "404": {
                        "description": "Email not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/{locale}/site/newsletter/status": {
            "post": {
                "tags": [
                    "Newsletter"
                ],
                "summary": "Get subscription status",
                "description": "Check newsletter subscription status for email",
                "operationId": "getNewsletterStatus",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subscription status retrieved successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/{locale}/site/newsletter/preferences": {
            "post": {
                "tags": [
                    "Newsletter"
                ],
                "summary": "Update subscription preferences",
                "description": "Update newsletter subscription preferences",
                "operationId": "updateNewsletterPreferences",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    },
                                    "preferences": {
                                        "properties": {
                                            "promotions": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "news": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "partnerships": {
                                                "type": "boolean",
                                                "example": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preferences updated successfully"
                    },
                    "404": {
                        "description": "Email not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/{locale}/site/newsletter/test-connection": {
            "get": {
                "tags": [
                    "Newsletter"
                ],
                "summary": "Test Mautic connection",
                "description": "Test connection to Mautic service (for debugging)",
                "operationId": "testMauticConnection",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection test completed"
                    },
                    "500": {
                        "description": "Connection test failed"
                    }
                }
            }
        },
        "/{locale}/site/pricing": {
            "get": {
                "tags": [
                    "Site"
                ],
                "summary": "Get pricing plans",
                "description": "Get all available pricing plans for public display",
                "operationId": "getPricingPlans",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pricing plans retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "basic"
                                                    },
                                                    "name": {
                                                        "type": "object"
                                                    },
                                                    "description": {
                                                        "type": "object"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "example": 9.99
                                                    },
                                                    "currency": {
                                                        "type": "string",
                                                        "example": "EUR"
                                                    },
                                                    "billing_period": {
                                                        "type": "string",
                                                        "example": "monthly"
                                                    },
                                                    "features": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    },
                                                    "limits": {
                                                        "type": "object"
                                                    },
                                                    "is_popular": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/site/pricing/{planId}": {
            "get": {
                "tags": [
                    "Site"
                ],
                "summary": "Get specific pricing plan",
                "description": "Get details of a specific pricing plan",
                "operationId": "getPricingPlan",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "planId",
                        "in": "path",
                        "description": "Plan ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "basic"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pricing plan retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "basic"
                                                },
                                                "name": {
                                                    "type": "object"
                                                },
                                                "description": {
                                                    "type": "object"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "example": 9.99
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "billing_period": {
                                                    "type": "string",
                                                    "example": "monthly"
                                                },
                                                "features": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "limits": {
                                                    "type": "object"
                                                },
                                                "is_popular": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pricing plan not found"
                    }
                }
            }
        },
        "/{locale}/site/search": {
            "get": {
                "tags": [
                    "Site"
                ],
                "summary": "Search website content",
                "description": "Search across news, pricing plans, and other public content",
                "operationId": "searchContent",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lojalumo kortelės"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Content type to search",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "news",
                                "pricing",
                                "features"
                            ],
                            "example": "all"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "query": {
                                                    "type": "string",
                                                    "example": "lojalumo kortelės"
                                                },
                                                "total_results": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "results": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "example": "news"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Naujienos apie lojalumo korteles"
                                                            },
                                                            "content": {
                                                                "type": "string",
                                                                "example": "Trumpas aprašymas..."
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "example": "/news/naujienos-apie-lojalumo-korteles"
                                                            },
                                                            "relevance": {
                                                                "type": "number",
                                                                "example": 0.95
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/site/pricing/newsletter/subscribe": {
            "post": {
                "tags": [
                    "Site"
                ],
                "summary": "Subscribe to newsletter",
                "description": "Subscribe email to newsletter",
                "operationId": "subscribePricingNewsletter",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "jonas@example.com"
                                    },
                                    "name": {
                                        "description": "Optional name",
                                        "type": "string",
                                        "example": "Jonas Jonaitis"
                                    },
                                    "interests": {
                                        "description": "Newsletter interests",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "updates",
                                            "promotions"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Newsletter subscription successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sėkmingai užsiprenumeravote naujienlaiškį"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/{locale}/site/upload": {
            "post": {
                "tags": [
                    "Site"
                ],
                "summary": "Upload file for contact or other purposes",
                "description": "Upload files for contact forms or other site functionality",
                "operationId": "uploadFile",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "File to upload",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "type": {
                                        "description": "Upload type",
                                        "type": "string",
                                        "example": "contact"
                                    },
                                    "description": {
                                        "description": "File description",
                                        "type": "string",
                                        "example": "CV failas"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "File uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "file_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/uploads/contact/file.pdf"
                                                },
                                                "file_name": {
                                                    "type": "string",
                                                    "example": "document.pdf"
                                                },
                                                "file_size": {
                                                    "type": "integer",
                                                    "example": 1024000
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/site/utils/format-price": {
            "get": {
                "tags": [
                    "Site"
                ],
                "summary": "Format price for display",
                "description": "Utility function to format prices according to locale",
                "operationId": "formatPrice",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Price amount",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": 19.99
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "Currency code",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "EUR"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Price formatted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "formatted": {
                                                    "type": "string",
                                                    "example": "19,99 €"
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "example": 19.99
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/site/statistics": {
            "get": {
                "tags": [
                    "Site"
                ],
                "summary": "Get public statistics",
                "description": "Retrieve public platform statistics",
                "operationId": "getPublicStatistics",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Statistics retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/{locale}/site/statistics/partners": {
            "get": {
                "tags": [
                    "Site"
                ],
                "summary": "Get partner statistics",
                "description": "Retrieve public partner statistics",
                "operationId": "getPartnerStatistics",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Partner statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Partner statistics retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/{locale}/site/statistics/charts": {
            "get": {
                "tags": [
                    "Site"
                ],
                "summary": "Get chart data for statistics",
                "description": "Get chart data for public statistics visualization",
                "operationId": "getStatisticsCharts",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lt"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time period for chart data",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "7days",
                                "30days",
                                "90days",
                                "1year"
                            ],
                            "example": "30days"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chart data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user_growth": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2023-01-01"
                                                            },
                                                            "count": {
                                                                "type": "integer",
                                                                "example": 150
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "points_activity": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2023-01-01"
                                                            },
                                                            "earned": {
                                                                "type": "integer",
                                                                "example": 2450
                                                            },
                                                            "spent": {
                                                                "type": "integer",
                                                                "example": 1890
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/sms/send": {
            "post": {
                "tags": [
                    "SMS"
                ],
                "summary": "Send SMS message",
                "description": "Sends an SMS to the specified number",
                "operationId": "sendSms",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "number",
                                    "message"
                                ],
                                "properties": {
                                    "number": {
                                        "description": "Recipient's phone number",
                                        "type": "string",
                                        "example": "+37061234567"
                                    },
                                    "message": {
                                        "description": "Message content",
                                        "type": "string",
                                        "example": "Your verification code is 123456"
                                    },
                                    "schedule": {
                                        "description": "Timestamp to schedule the message (optional)",
                                        "type": "integer",
                                        "example": 1679012345
                                    },
                                    "prioritize": {
                                        "description": "Whether to prioritize this message (optional)",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "SMS sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SMS sent successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "ID": {
                                                    "type": "string",
                                                    "example": "12345"
                                                },
                                                "number": {
                                                    "type": "string",
                                                    "example": "+37061234567"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Your verification code is 123456"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Pending"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to send SMS"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/sms/send-verification-code": {
            "post": {
                "tags": [
                    "SMS"
                ],
                "summary": "Send verification code",
                "description": "Sends a verification code to the specified phone number",
                "operationId": "sendVerificationCode",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "number",
                                    "code"
                                ],
                                "properties": {
                                    "number": {
                                        "description": "Recipient's phone number",
                                        "type": "string",
                                        "example": "+37061234567"
                                    },
                                    "code": {
                                        "description": "Verification code",
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification code sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Verification code sent successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "ID": {
                                                    "type": "string",
                                                    "example": "12345"
                                                },
                                                "number": {
                                                    "type": "string",
                                                    "example": "+37061234567"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Your verification code is 123456"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Pending"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/sms/send-bulk": {
            "post": {
                "tags": [
                    "SMS"
                ],
                "summary": "Send bulk SMS messages",
                "description": "Sends SMS messages to multiple recipients",
                "operationId": "sendBulkSms",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "messages"
                                ],
                                "properties": {
                                    "messages": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "number",
                                                "message"
                                            ],
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "example": "+37061234567"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Hello!"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "schedule": {
                                        "description": "Timestamp to schedule the messages (optional)",
                                        "type": "integer",
                                        "example": 1679012345
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bulk SMS sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bulk SMS sent successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "ID": {
                                                        "type": "string",
                                                        "example": "12345"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "example": "+37061234567"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "Hello!"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "Pending"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/sms/balance": {
            "get": {
                "tags": [
                    "SMS"
                ],
                "summary": "Get SMS balance",
                "description": "Returns the current SMS credit balance",
                "operationId": "getSmsBalance",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "balance": {
                                                    "type": "string",
                                                    "example": "5000"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/sms/status/{id}": {
            "get": {
                "tags": [
                    "SMS"
                ],
                "summary": "Get SMS message status",
                "description": "Returns the status of a specific SMS message",
                "operationId": "getSmsStatus",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SMS message ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "12345"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "ID": {
                                                    "type": "string",
                                                    "example": "12345"
                                                },
                                                "number": {
                                                    "type": "string",
                                                    "example": "+37061234567"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Hello!"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Delivered"
                                                },
                                                "sentDate": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-03-17T10:30:00+02:00"
                                                },
                                                "deliveredDate": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-03-17T10:30:05+02:00"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/sms/webhook": {
            "post": {
                "tags": [
                    "SMS"
                ],
                "summary": "SMS webhook endpoint",
                "description": "Receives and processes SMS webhooks from the provider",
                "operationId": "smsWebhook",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/{locale}/subscription-plans": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get subscription plans",
                "description": "Returns all active subscription plans",
                "operationId": "getSubscriptionPlans",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subscription plans retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "premium"
                                                    },
                                                    "display_name": {
                                                        "type": "string",
                                                        "example": "Premium"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 9.99
                                                    },
                                                    "duration": {
                                                        "type": "string",
                                                        "example": "monthly"
                                                    },
                                                    "features": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "is_recommended": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/{locale}/subscription-plans/{id}": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get subscription plan details",
                "description": "Returns details for a specific subscription plan",
                "operationId": "getSubscriptionPlan",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subscription plan ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subscription plan retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "premium"
                                                },
                                                "display_name": {
                                                    "type": "string",
                                                    "example": "Premium"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 9.99
                                                },
                                                "duration": {
                                                    "type": "string",
                                                    "example": "monthly"
                                                },
                                                "features": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "is_recommended": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subscription plan not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/{locale}/subscriptions/create-payment-intent": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Create a payment intent for subscription",
                "description": "Creates a Stripe payment intent for subscription purchase",
                "operationId": "createSubscriptionPaymentIntent",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "plan_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "promo_code": {
                                        "type": "string",
                                        "example": "SUMMER20",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment intent created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "client_secret": {
                                                    "type": "string"
                                                },
                                                "amount": {
                                                    "type": "number"
                                                },
                                                "currency": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/{locale}/subscriptions/process-payment": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Process subscription payment",
                "description": "Processes payment and creates a subscription for the user",
                "operationId": "processSubscriptionPayment",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "payment_method": {
                                        "type": "string"
                                    },
                                    "plan_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "promo_code": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subscription created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "subscription_id": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "plan": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/{locale}/subscriptions/cancel": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Cancel subscription",
                "description": "Cancels an active subscription",
                "operationId": "cancelSubscription",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subscription cancelled successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/{locale}/subscriptions/validate-promo": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Validate promo code",
                "description": "Validates a promo code for subscription purchase",
                "operationId": "validatePromoCode",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "SUMMER20"
                                    },
                                    "plan_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Promo code is valid"
                                        },
                                        "data": {
                                            "properties": {
                                                "valid": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "original_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 9.99
                                                },
                                                "discounted_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 7.99
                                                },
                                                "savings": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 2
                                                },
                                                "free_months": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/{locale}/subscriptions/customer-portal": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get Stripe customer portal link",
                "description": "Generates a Stripe customer portal link for the authenticated user",
                "operationId": "getCustomerPortalLink",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer portal link generated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "url": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/{locale}/subscriptions/sync": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Sync subscription details",
                "description": "Manually synchronize subscription details with Stripe",
                "operationId": "syncSubscriptionDetails",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subscription details synchronized successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/{locale}/subscriptions/invoices": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get user invoices",
                "description": "Returns all invoices for the authenticated user",
                "operationId": "getUserInvoices",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invoices retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "in_1LNLDmGEPNSa3FvwT5IFzVOl"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "example": "6C8A83FA-0001"
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 9.99
                                                    },
                                                    "currency": {
                                                        "type": "string",
                                                        "example": "eur"
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2022-07-20T12:34:56Z"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "paid"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Premium Plan Subscription"
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "example": "https://invoice.stripe.com/i/acct_xxxxxxxx/pdf/inv_xxxxxxxx"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/{locale}/subscriptions/invoices/{id}": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get specific invoice",
                "description": "Returns a specific invoice for the authenticated user",
                "operationId": "getUserInvoice",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "in_1LNLDmGEPNSa3FvwT5IFzVOl"
                                                },
                                                "number": {
                                                    "type": "string",
                                                    "example": "6C8A83FA-0001"
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 9.99
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "eur"
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2022-07-20T12:34:56Z"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "paid"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Premium Plan Subscription"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "example": "https://invoice.stripe.com/i/acct_xxxxxxxx/pdf/inv_xxxxxxxx"
                                                },
                                                "lines": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Invoice not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/{locale}/transactions": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "List transactions",
                "description": "Get a list of transactions with optional filtering",
                "operationId": "listTransactions",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Filter by user ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "member_id",
                        "in": "query",
                        "description": "Filter by member ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "loyalty_card_id",
                        "in": "query",
                        "description": "Filter by loyalty card ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "shop_id",
                        "in": "query",
                        "description": "Filter by shop ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by transaction type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "purchase",
                                "refund",
                                "adjustment",
                                "reward",
                                "redemption",
                                "other"
                            ],
                            "example": "purchase"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by transaction status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "completed"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter from date (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-01-01"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter to date (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-12-31"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "loyalty_card_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "member_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "shop_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "format": "decimal",
                                                        "example": 129.99
                                                    },
                                                    "currency": {
                                                        "type": "string",
                                                        "example": "EUR"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "purchase"
                                                    },
                                                    "reference_number": {
                                                        "type": "string",
                                                        "example": "INV-2023-001"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Purchase at Store XYZ"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "completed"
                                                    },
                                                    "transaction_date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-06-01T10:00:00Z"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-06-01T10:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-06-01T10:00:00Z"
                                                    },
                                                    "user": {
                                                        "type": "object"
                                                    },
                                                    "loyalty_card": {
                                                        "type": "object"
                                                    },
                                                    "member": {
                                                        "type": "object"
                                                    },
                                                    "shop": {
                                                        "type": "object"
                                                    },
                                                    "payments": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 75
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to view transactions"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Create transaction",
                "description": "Create a new transaction record",
                "operationId": "createTransaction",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "loyalty_card_id",
                                    "amount",
                                    "currency",
                                    "type"
                                ],
                                "properties": {
                                    "loyalty_card_id": {
                                        "description": "Loyalty card ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "shop_id": {
                                        "description": "Shop ID where transaction occurred",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "amount": {
                                        "description": "Transaction amount",
                                        "type": "number",
                                        "format": "decimal",
                                        "example": 129.99
                                    },
                                    "currency": {
                                        "description": "Currency code",
                                        "type": "string",
                                        "example": "EUR"
                                    },
                                    "type": {
                                        "description": "Transaction type",
                                        "type": "string",
                                        "enum": [
                                            "purchase",
                                            "refund",
                                            "adjustment",
                                            "reward",
                                            "redemption",
                                            "other"
                                        ],
                                        "example": "purchase"
                                    },
                                    "reference_number": {
                                        "description": "Reference number",
                                        "type": "string",
                                        "example": "INV-2023-001"
                                    },
                                    "description": {
                                        "description": "Transaction description",
                                        "type": "string",
                                        "example": "Purchase at Store XYZ"
                                    },
                                    "status": {
                                        "description": "Transaction status",
                                        "type": "string",
                                        "example": "completed"
                                    },
                                    "metadata": {
                                        "description": "Additional metadata",
                                        "type": "object"
                                    },
                                    "transaction_date": {
                                        "description": "Transaction date",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-06-01T10:00:00Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "loyalty_card_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "member_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "shop_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "format": "decimal",
                                                    "example": 129.99
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "purchase"
                                                },
                                                "reference_number": {
                                                    "type": "string",
                                                    "example": "INV-2023-001"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Purchase at Store XYZ"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "transaction_date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to create transactions"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/transactions/{id}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction details",
                "description": "Get details of a specific transaction with related data",
                "operationId": "getTransaction",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "loyalty_card_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "member_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "shop_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "format": "decimal",
                                                    "example": 129.99
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "purchase"
                                                },
                                                "reference_number": {
                                                    "type": "string",
                                                    "example": "INV-2023-001"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Purchase at Store XYZ"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "is_fully_paid": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "transaction_date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                },
                                                "user": {
                                                    "type": "object"
                                                },
                                                "loyalty_card": {
                                                    "type": "object"
                                                },
                                                "member": {
                                                    "type": "object"
                                                },
                                                "shop": {
                                                    "type": "object"
                                                },
                                                "payments": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to view transaction"
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Update transaction",
                "description": "Update an existing transaction",
                "operationId": "updateTransaction",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "shop_id": {
                                        "description": "Shop ID where transaction occurred",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "amount": {
                                        "description": "Transaction amount",
                                        "type": "number",
                                        "format": "decimal",
                                        "example": 129.99
                                    },
                                    "currency": {
                                        "description": "Currency code",
                                        "type": "string",
                                        "example": "EUR"
                                    },
                                    "type": {
                                        "description": "Transaction type",
                                        "type": "string",
                                        "enum": [
                                            "purchase",
                                            "refund",
                                            "adjustment",
                                            "reward",
                                            "redemption",
                                            "other"
                                        ],
                                        "example": "purchase"
                                    },
                                    "reference_number": {
                                        "description": "Reference number",
                                        "type": "string",
                                        "example": "INV-2023-001"
                                    },
                                    "description": {
                                        "description": "Transaction description",
                                        "type": "string",
                                        "example": "Purchase at Store XYZ"
                                    },
                                    "status": {
                                        "description": "Transaction status",
                                        "type": "string",
                                        "example": "completed"
                                    },
                                    "metadata": {
                                        "description": "Additional metadata",
                                        "type": "object"
                                    },
                                    "transaction_date": {
                                        "description": "Transaction date",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-06-01T10:00:00Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "loyalty_card_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "member_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "shop_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "format": "decimal",
                                                    "example": 129.99
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "EUR"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "purchase"
                                                },
                                                "reference_number": {
                                                    "type": "string",
                                                    "example": "INV-2023-001"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Purchase at Store XYZ"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "transaction_date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-06-01T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to update transaction"
                    },
                    "404": {
                        "description": "Transaction not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/transactions/summary": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get spending summary with breakdown",
                "description": "Get summary of spending with breakdown by categories",
                "operationId": "getSummary",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time period for the summary",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "day",
                                "week",
                                "month",
                                "year"
                            ],
                            "example": "month"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "totalSpent": {
                                                    "type": "number",
                                                    "format": "decimal",
                                                    "example": 2272.83
                                                },
                                                "totalReceivable": {
                                                    "type": "number",
                                                    "format": "decimal",
                                                    "example": 938.83
                                                },
                                                "spendingBreakdown": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Food"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "format": "decimal",
                                                                "example": 832.42
                                                            },
                                                            "percentage": {
                                                                "type": "number",
                                                                "format": "decimal",
                                                                "example": 36.5
                                                            },
                                                            "color": {
                                                                "type": "string",
                                                                "example": "#3B5998"
                                                            },
                                                            "icon": {
                                                                "type": "string",
                                                                "example": "food"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to view transactions"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/transactions/frequent": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get frequent spending",
                "description": "Get list of frequent spending merchants and categories",
                "operationId": "getFrequentSpending",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time period for the data",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "day",
                                "week",
                                "month",
                                "year"
                            ],
                            "example": "month"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Coffee Shop"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "decimal",
                                                        "example": 5.99
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to view transactions"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/transactions/largest": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get largest spending",
                "description": "Get list of largest spending transactions",
                "operationId": "getLargestSpending",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time period for the data",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "day",
                                "week",
                                "month",
                                "year"
                            ],
                            "example": "month"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "icon": {
                                                        "type": "string",
                                                        "example": "shopping"
                                                    },
                                                    "color": {
                                                        "type": "string",
                                                        "example": "#3B5998"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Shopping Mall"
                                                    },
                                                    "time": {
                                                        "type": "integer",
                                                        "example": 1686816000
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "format": "decimal",
                                                        "example": 347.23
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to view transactions"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/transactions/categories": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get expense categories",
                "description": "Get list of expense categories with icons and colors",
                "operationId": "getExpenseCategories",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Food"
                                                    },
                                                    "icon": {
                                                        "type": "string",
                                                        "example": "food"
                                                    },
                                                    "color": {
                                                        "type": "string",
                                                        "example": "#3B5998"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - No permission to view transactions"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/transactions/{transaction}/receipt": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction receipt",
                "description": "Download or view transaction receipt image from secure storage",
                "operationId": "getTransactionReceipt",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "transaction",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "download",
                        "in": "query",
                        "description": "Force download instead of inline view",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Receipt file",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction or receipt not found"
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/transactions/{transaction}/receipt-url": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction receipt URL",
                "description": "Get a temporary presigned URL for accessing transaction receipt",
                "operationId": "getTransactionReceiptUrl",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "transaction",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Receipt URL generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "url": {
                                                    "type": "string",
                                                    "example": "https://api.example.com/receipts/receipt_transaction_123.jpg"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-15T15:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction or receipt not found"
                    },
                    "403": {
                        "description": "Access denied"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/transactions/spending-by-category": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get spending statistics by category",
                "description": "Get aggregated spending data grouped by transaction categories",
                "operationId": "getSpendingByCategory",
                "parameters": [
                    {
                        "name": "locale",
                        "in": "path",
                        "description": "Locale code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time period for analysis",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "week",
                                "month",
                                "quarter",
                                "year"
                            ],
                            "example": "month"
                        }
                    },
                    {
                        "name": "loyalty_card_id",
                        "in": "query",
                        "description": "Filter by specific loyalty card",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Custom start date (YYYY-MM-DD)",
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Custom end date (YYYY-MM-DD)",
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spending statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "period": {
                                                    "type": "string",
                                                    "example": "month"
                                                },
                                                "total_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1234.56
                                                },
                                                "total_transactions": {
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "category_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "category_name": {
                                                                "type": "string",
                                                                "example": "Maistas"
                                                            },
                                                            "total_amount": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 567.89
                                                            },
                                                            "transaction_count": {
                                                                "type": "integer",
                                                                "example": 12
                                                            },
                                                            "average_amount": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 47.32
                                                            },
                                                            "percentage": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 45.8
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "generated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-15T15:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/users": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "List all users",
                "description": "Get a list of all users in the platform",
                "operationId": "listUsers",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter users by role",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "partner"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for user name or email",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "john"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "+12345678901"
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "example": "member"
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-01-01T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-01-01T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 150
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Create new user",
                "description": "Create a new user",
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User's full name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "description": "User's password (min 8 chars)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "phone": {
                                        "description": "User's phone number",
                                        "type": "string",
                                        "example": "+12345678901"
                                    },
                                    "role": {
                                        "description": "User's role (member, partner, partner_staff, loyalty_staff, super_admin, shop_integration)",
                                        "type": "string",
                                        "example": "member"
                                    },
                                    "is_active": {
                                        "description": "Whether the user is active",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "birthday": {
                                        "description": "User's birthday",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2000-01-01"
                                    },
                                    "address": {
                                        "description": "User's address",
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "description": "User's city",
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "country_code": {
                                        "description": "User's country code",
                                        "type": "string",
                                        "format": "iso2",
                                        "example": "US"
                                    },
                                    "zip": {
                                        "description": "User's zip code",
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "card_design": {
                                        "description": "User's card design",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "cardColor": {
                                                    "type": "string",
                                                    "example": "#004EE4"
                                                },
                                                "cardSticker": {
                                                    "type": "string",
                                                    "example": "sticker1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "locale": {
                                        "description": "User's locale",
                                        "type": "string",
                                        "format": "iso5",
                                        "example": "en"
                                    },
                                    "time_zone": {
                                        "description": "User's time zone",
                                        "type": "string",
                                        "example": "America/New_York"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+12345678901"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "member"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/{locale}/users/{id}": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get user details",
                "description": "Get details of a specific user",
                "operationId": "getUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+12345678901"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "member"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update user",
                "description": "Update a user's information",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "User's full name",
                                        "type": "string",
                                        "example": "John Doe Updated"
                                    },
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.updated@example.com"
                                    },
                                    "password": {
                                        "description": "User's new password (min 8 chars)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "phone": {
                                        "description": "User's phone number",
                                        "type": "string",
                                        "example": "+12345678902"
                                    },
                                    "role": {
                                        "description": "User's role (member, partner, partner_staff, loyalty_staff, super_admin, shop_integration)",
                                        "type": "string",
                                        "example": "partner"
                                    },
                                    "is_active": {
                                        "description": "Whether the user is active",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "birthday": {
                                        "description": "User's birthday",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2000-01-01"
                                    },
                                    "address": {
                                        "description": "User's address",
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "description": "User's city",
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "country_code": {
                                        "description": "User's country code",
                                        "type": "string",
                                        "format": "iso2",
                                        "example": "US"
                                    },
                                    "zip": {
                                        "description": "User's zip code",
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "card_design": {
                                        "description": "User's card design",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "cardColor": {
                                                    "type": "string",
                                                    "example": "#004EE4"
                                                },
                                                "cardSticker": {
                                                    "type": "string",
                                                    "example": "sticker1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "locale": {
                                        "description": "User's locale",
                                        "type": "string",
                                        "format": "iso5",
                                        "example": "en"
                                    },
                                    "time_zone": {
                                        "description": "User's time zone",
                                        "type": "string",
                                        "example": "America/New_York"
                                    },
                                    "gender": {
                                        "description": "User's gender",
                                        "type": "string",
                                        "example": "male"
                                    },
                                    "avatar_url": {
                                        "description": "User's avatar URL",
                                        "type": "string",
                                        "example": "https://example.com/avatar.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe Updated"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.updated@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+12345678902"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "partner"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete user",
                "description": "Delete a user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "SuccessResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "integer",
                        "example": 200
                    },
                    "request_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "message": {
                        "type": "string",
                        "example": "Success message"
                    },
                    "data": {
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "code": {
                        "type": "integer",
                        "example": 400
                    },
                    "request_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "message": {
                        "type": "string",
                        "example": "Error message"
                    },
                    "errors": {
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ValidationErrorResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "code": {
                        "type": "integer",
                        "example": 422
                    },
                    "request_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "field": [
                                "The field is required."
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "MemberResource": {
                "title": "Member Resource",
                "description": "Member resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+37061234567"
                    },
                    "birthday": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "example": "male",
                        "nullable": true
                    },
                    "avatar_url": {
                        "type": "string",
                        "example": "https://cdn.loyalty.lt/avatars/user-1.jpg",
                        "nullable": true
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "city": {
                        "type": "string",
                        "example": "Vilnius"
                    },
                    "country_code": {
                        "type": "string",
                        "example": "LT"
                    },
                    "zip": {
                        "type": "string",
                        "example": "01234"
                    },
                    "role": {
                        "type": "string",
                        "example": "member"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "loyaltylt": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "card_number": {
                                "type": "string",
                                "example": "LC00000001"
                            },
                            "qr_code": {
                                "type": "string",
                                "example": "123e4567-e89b-12d3-a456-426614174000"
                            },
                            "barcode_type": {
                                "type": "string",
                                "example": "QR"
                            },
                            "card_type": {
                                "type": "string",
                                "example": "universal"
                            },
                            "card_design": {
                                "type": "object",
                                "nullable": true
                            },
                            "is_active": {
                                "type": "boolean",
                                "example": true
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "loyalty_cards": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "card_number": {
                                    "type": "string",
                                    "example": "LC00000001"
                                },
                                "qr_code": {
                                    "type": "string",
                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                },
                                "barcode_type": {
                                    "type": "string",
                                    "example": "QR"
                                },
                                "card_type": {
                                    "type": "string",
                                    "example": "universal"
                                },
                                "partner_id": {
                                    "type": "integer",
                                    "example": 1,
                                    "nullable": true
                                },
                                "partner_name": {
                                    "type": "string",
                                    "example": "Partner Name",
                                    "nullable": true
                                },
                                "card_design": {
                                    "type": "object",
                                    "nullable": true
                                },
                                "is_active": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "points_balance": {
                                    "type": "integer",
                                    "example": 500
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "subscription": {
                        "properties": {
                            "plan": {
                                "type": "string",
                                "example": "premium",
                                "nullable": true
                            },
                            "status": {
                                "type": "string",
                                "example": "active",
                                "nullable": true
                            },
                            "expires_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "is_canceled": {
                                "type": "boolean",
                                "example": false
                            },
                            "cancels_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "is_renewable": {
                                "type": "boolean",
                                "example": false
                            },
                            "next_payment_date": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "payment_method": {
                                "type": "string",
                                "example": "card",
                                "nullable": true
                            },
                            "card_last_digits": {
                                "type": "string",
                                "example": "4242",
                                "nullable": true
                            },
                            "card_brand": {
                                "type": "string",
                                "example": "visa",
                                "nullable": true
                            }
                        },
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Setting": {
                "required": [
                    "key",
                    "value",
                    "type",
                    "group"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "key": {
                        "type": "string",
                        "example": "app_name"
                    },
                    "value": {
                        "type": "string",
                        "example": "Loyalty.lt"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "string",
                            "integer",
                            "boolean",
                            "json",
                            "html"
                        ],
                        "example": "string"
                    },
                    "group": {
                        "type": "string",
                        "example": "app"
                    },
                    "label": {
                        "type": "string",
                        "example": "Application Name"
                    },
                    "description": {
                        "type": "string",
                        "example": "The name of the application displayed to users"
                    },
                    "is_public": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_editable": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter JWT token in the format: Bearer {token}",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Admin\\System",
            "description": "Admin system health and status endpoints"
        },
        {
            "name": "Audit Logs",
            "description": "Audit log related endpoints"
        },
        {
            "name": "Authentication",
            "description": "Authentication endpoints for shop integrations"
        },
        {
            "name": "Bill Splitting",
            "description": "APIs for managing bill splitting functionality"
        },
        {
            "name": "User Management",
            "description": "APIs for managing users in the loyalty platform"
        },
        {
            "name": "SMS",
            "description": "SMS sending and receiving operations"
        },
        {
            "name": "Loyalty Cards",
            "description": "APIs for managing loyalty cards in the platform"
        },
        {
            "name": "Points",
            "description": "APIs for managing loyalty points"
        },
        {
            "name": "Partners",
            "description": "APIs for managing partners in the loyalty platform"
        },
        {
            "name": "Shops",
            "description": "APIs for viewing shops in the loyalty platform"
        },
        {
            "name": "Offers",
            "description": "APIs for managing offers in the loyalty platform"
        },
        {
            "name": "Coupons",
            "description": "APIs for managing coupons in the loyalty platform"
        },
        {
            "name": "Games",
            "description": "Game and game session management endpoints"
        },
        {
            "name": "Pricing Rules",
            "description": "APIs for managing partner pricing rules and billing"
        },
        {
            "name": "Settings",
            "description": "Settings management endpoints"
        },
        {
            "name": "System",
            "description": "System health and status endpoints"
        },
        {
            "name": "Game Sessions",
            "description": "APIs for managing game sessions and real-time game interactions"
        },
        {
            "name": "Members",
            "description": "API endpoints for managing loyalty members"
        },
        {
            "name": "Onboarding",
            "description": "API endpoints for partner onboarding process"
        },
        {
            "name": "Footer",
            "description": "Footer data endpoints"
        },
        {
            "name": "Shop Coupons",
            "description": "Shop endpoints for managing user coupons and offers"
        },
        {
            "name": "Shop Games",
            "description": "Shop endpoints for managing games and game sessions"
        },
        {
            "name": "Shop Loyalty Cards",
            "description": "Shop endpoints for managing loyalty cards in external integrations"
        },
        {
            "name": "Shop Offers & Coupons",
            "description": "Shop endpoints for managing offers and coupons in external integrations"
        },
        {
            "name": "Shop Points",
            "description": "Shop endpoints for managing loyalty points in external integrations"
        },
        {
            "name": "Shop Shops",
            "description": "Shop endpoints for managing shops in external integrations"
        },
        {
            "name": "Shop Transactions",
            "description": "Shop endpoints for transaction history and statistics"
        },
        {
            "name": "Site Blog",
            "description": "APIs for public blog functionality - blog posts, categories, search"
        },
        {
            "name": "Site",
            "description": "APIs for website functionality - contact forms, news, statistics, etc."
        },
        {
            "name": "Newsletter",
            "description": "Newsletter subscription management endpoints"
        },
        {
            "name": "Transactions",
            "description": "APIs for managing transactions"
        },
        {
            "name": "Admin Authentication",
            "description": "Admin Authentication"
        },
        {
            "name": "Admin - Partners",
            "description": "Admin - Partners"
        },
        {
            "name": "SMS Marketingas",
            "description": "SMS Marketingas"
        },
        {
            "name": "Melrose Labs",
            "description": "Melrose Labs"
        },
        {
            "name": "Notifications",
            "description": "Notifications"
        },
        {
            "name": "Notification Settings",
            "description": "Notification Settings"
        },
        {
            "name": "Partner Games",
            "description": "Partner Games"
        },
        {
            "name": "Shop - XML Import",
            "description": "Shop - XML Import"
        },
        {
            "name": "Subscriptions",
            "description": "Subscriptions"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ]
}